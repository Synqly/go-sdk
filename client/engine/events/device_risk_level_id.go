// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Risk Level ID. The normalized risk level id.
type DeviceRiskLevelId uint8

const (
	DeviceRiskLevelIdInfo DeviceRiskLevelId = iota + 1
	DeviceRiskLevelIdLow
	DeviceRiskLevelIdMedium
	DeviceRiskLevelIdHigh
	DeviceRiskLevelIdCritical
)

func (d DeviceRiskLevelId) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DeviceRiskLevelIdInfo:
		return "0"
	case DeviceRiskLevelIdLow:
		return "1"
	case DeviceRiskLevelIdMedium:
		return "2"
	case DeviceRiskLevelIdHigh:
		return "3"
	case DeviceRiskLevelIdCritical:
		return "4"
	}
}

func (d DeviceRiskLevelId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DeviceRiskLevelId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := DeviceRiskLevelIdInfo
		*d = value
	case "1":
		value := DeviceRiskLevelIdLow
		*d = value
	case "2":
		value := DeviceRiskLevelIdMedium
		*d = value
	case "3":
		value := DeviceRiskLevelIdHigh
		*d = value
	case "4":
		value := DeviceRiskLevelIdCritical
		*d = value
	}
	return nil
}
