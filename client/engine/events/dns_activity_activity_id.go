// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Activity ID. The normalized identifier of the activity that triggered the event.
type DnsActivityActivityId uint8

const (
	// The event activity is unknown.
	DnsActivityActivityIdUnknown DnsActivityActivityId = iota + 1
	// The DNS query request.
	DnsActivityActivityIdQuery
	// The DNS query response.
	DnsActivityActivityIdResponse
	// The network connection was abnormally terminated or closed by a middle device like firewalls.
	DnsActivityActivityIdReset
	// The network connection failed. For example a connection timeout or no route to host.
	DnsActivityActivityIdFail
	// The network connection was refused. For example an attempt to connect to a server port which is not open.
	DnsActivityActivityIdRefuse
	// Network traffic report.
	DnsActivityActivityIdTraffic
	// The event activity is not mapped.
	DnsActivityActivityIdOther
)

func (d DnsActivityActivityId) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DnsActivityActivityIdUnknown:
		return "0"
	case DnsActivityActivityIdQuery:
		return "1"
	case DnsActivityActivityIdResponse:
		return "2"
	case DnsActivityActivityIdReset:
		return "3"
	case DnsActivityActivityIdFail:
		return "4"
	case DnsActivityActivityIdRefuse:
		return "5"
	case DnsActivityActivityIdTraffic:
		return "6"
	case DnsActivityActivityIdOther:
		return "99"
	}
}

func (d DnsActivityActivityId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DnsActivityActivityId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := DnsActivityActivityIdUnknown
		*d = value
	case "1":
		value := DnsActivityActivityIdQuery
		*d = value
	case "2":
		value := DnsActivityActivityIdResponse
		*d = value
	case "3":
		value := DnsActivityActivityIdReset
		*d = value
	case "4":
		value := DnsActivityActivityIdFail
		*d = value
	case "5":
		value := DnsActivityActivityIdRefuse
		*d = value
	case "6":
		value := DnsActivityActivityIdTraffic
		*d = value
	case "99":
		value := DnsActivityActivityIdOther
		*d = value
	}
	return nil
}
