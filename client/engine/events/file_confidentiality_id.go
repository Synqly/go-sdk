// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Confidentiality ID. The normalized identifier of the file content confidentiality indicator.
type FileConfidentialityId uint8

const (
	FileConfidentialityIdUnknown FileConfidentialityId = iota + 1
	FileConfidentialityIdNotConfidential
	FileConfidentialityIdConfidential
	FileConfidentialityIdSecret
	FileConfidentialityIdTopSecret
	FileConfidentialityIdOther
)

func (f FileConfidentialityId) String() string {
	switch f {
	default:
		return strconv.Itoa(int(f))
	case FileConfidentialityIdUnknown:
		return "0"
	case FileConfidentialityIdNotConfidential:
		return "1"
	case FileConfidentialityIdConfidential:
		return "2"
	case FileConfidentialityIdSecret:
		return "3"
	case FileConfidentialityIdTopSecret:
		return "4"
	case FileConfidentialityIdOther:
		return "99"
	}
}

func (f FileConfidentialityId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", f.String())), nil
}

func (f *FileConfidentialityId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := FileConfidentialityIdUnknown
		*f = value
	case "1":
		value := FileConfidentialityIdNotConfidential
		*f = value
	case "2":
		value := FileConfidentialityIdConfidential
		*f = value
	case "3":
		value := FileConfidentialityIdSecret
		*f = value
	case "4":
		value := FileConfidentialityIdTopSecret
		*f = value
	case "99":
		value := FileConfidentialityIdOther
		*f = value
	}
	return nil
}
