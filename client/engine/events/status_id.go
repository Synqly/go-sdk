// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Status ID. The normalized identifier of the event status.
type StatusId uint8

const (
	StatusIdUnknown StatusId = iota + 1
	StatusIdSuccess
	StatusIdFailure
	// The event status is not mapped. See the <code>status</code> attribute, which contains a data source specific value.
	StatusIdOther
)

func (s StatusId) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case StatusIdUnknown:
		return "0"
	case StatusIdSuccess:
		return "1"
	case StatusIdFailure:
		return "2"
	case StatusIdOther:
		return "99"
	}
}

func (s StatusId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *StatusId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := StatusIdUnknown
		*s = value
	case "1":
		value := StatusIdSuccess
		*s = value
	case "2":
		value := StatusIdFailure
		*s = value
	case "99":
		value := StatusIdOther
		*s = value
	}
	return nil
}
