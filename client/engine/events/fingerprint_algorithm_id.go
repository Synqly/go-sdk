// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Algorithm ID. The identifier of the normalized hash algorithm, which was used to create the digital fingerprint.
type FingerprintAlgorithmId uint8

const (
	FingerprintAlgorithmIdUnknown FingerprintAlgorithmId = iota + 1
	// MD5 message-digest algorithm producing a 128-bit (16-byte) hash value.
	FingerprintAlgorithmIdMd5
	// Secure Hash Algorithm 1 producing a 160-bit (20-byte) hash value.
	FingerprintAlgorithmIdSha1
	// Secure Hash Algorithm 2 producing a 256-bit (32-byte) hash value.
	FingerprintAlgorithmIdSha256
	// Secure Hash Algorithm 2 producing a 512-bit (64-byte) hash value.
	FingerprintAlgorithmIdSha512
	// The ssdeep generated fuzzy checksum. Also known as Context Triggered Piecewise Hash (CTPH).
	FingerprintAlgorithmIdCtph
	// The TLSH fuzzy hashing algorithm.
	FingerprintAlgorithmIdTlsh
	// Microsoft simple non-cryptographic hash algorithm that works by XORing the bytes in a circular-shifting fashion.
	FingerprintAlgorithmIdQuickXorHash
	FingerprintAlgorithmIdOther
)

func (f FingerprintAlgorithmId) String() string {
	switch f {
	default:
		return strconv.Itoa(int(f))
	case FingerprintAlgorithmIdUnknown:
		return "0"
	case FingerprintAlgorithmIdMd5:
		return "1"
	case FingerprintAlgorithmIdSha1:
		return "2"
	case FingerprintAlgorithmIdSha256:
		return "3"
	case FingerprintAlgorithmIdSha512:
		return "4"
	case FingerprintAlgorithmIdCtph:
		return "5"
	case FingerprintAlgorithmIdTlsh:
		return "6"
	case FingerprintAlgorithmIdQuickXorHash:
		return "7"
	case FingerprintAlgorithmIdOther:
		return "99"
	}
}

func (f FingerprintAlgorithmId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", f.String())), nil
}

func (f *FingerprintAlgorithmId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := FingerprintAlgorithmIdUnknown
		*f = value
	case "1":
		value := FingerprintAlgorithmIdMd5
		*f = value
	case "2":
		value := FingerprintAlgorithmIdSha1
		*f = value
	case "3":
		value := FingerprintAlgorithmIdSha256
		*f = value
	case "4":
		value := FingerprintAlgorithmIdSha512
		*f = value
	case "5":
		value := FingerprintAlgorithmIdCtph
		*f = value
	case "6":
		value := FingerprintAlgorithmIdTlsh
		*f = value
	case "7":
		value := FingerprintAlgorithmIdQuickXorHash
		*f = value
	case "99":
		value := FingerprintAlgorithmIdOther
		*f = value
	}
	return nil
}
