// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// State ID. The normalized state identifier of a security finding.
type SecurityFindingStateId uint8

const (
	SecurityFindingStateIdUnknown SecurityFindingStateId = iota + 1
	// The finding is new and yet to be reviewed.
	SecurityFindingStateIdNew
	// The finding is under review.
	SecurityFindingStateIdInProgress
	// The finding was reviewed, considered as a false positive and is now suppressed.
	SecurityFindingStateIdSuppressed
	// The finding was reviewed and remediated and is now considered resolved.
	SecurityFindingStateIdResolved
	// The state is not mapped. See the <code>state</code> attribute, which contains a data source specific value.
	SecurityFindingStateIdOther
)

func (s SecurityFindingStateId) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SecurityFindingStateIdUnknown:
		return "0"
	case SecurityFindingStateIdNew:
		return "1"
	case SecurityFindingStateIdInProgress:
		return "2"
	case SecurityFindingStateIdSuppressed:
		return "3"
	case SecurityFindingStateIdResolved:
		return "4"
	case SecurityFindingStateIdOther:
		return "99"
	}
}

func (s SecurityFindingStateId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SecurityFindingStateId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := SecurityFindingStateIdUnknown
		*s = value
	case "1":
		value := SecurityFindingStateIdNew
		*s = value
	case "2":
		value := SecurityFindingStateIdInProgress
		*s = value
	case "3":
		value := SecurityFindingStateIdSuppressed
		*s = value
	case "4":
		value := SecurityFindingStateIdResolved
		*s = value
	case "99":
		value := SecurityFindingStateIdOther
		*s = value
	}
	return nil
}
