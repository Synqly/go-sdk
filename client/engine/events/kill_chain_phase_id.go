// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Kill Chain Phase ID. The cyber kill chain phase identifier.
type KillChainPhaseId uint8

const (
	// The kill chain phase is unknown.
	KillChainPhaseIdUnknown KillChainPhaseId = iota + 1
	// The attackers pick a target and perform a detailed analysis, start collecting information (email addresses, conferences information, etc.) and evaluate the victim’s vulnerabilities to determine how to exploit them.
	KillChainPhaseIdReconnaissance
	// The attackers develop a malware weapon and aim to exploit the discovered vulnerabilities.
	KillChainPhaseIdWeaponization
	// The intruders will use various tactics, such as phishing, infected USB drives, etc.
	KillChainPhaseIdDelivery
	// The intruders start leveraging vulnerabilities to executed code on the victim’s system.
	KillChainPhaseIdExploitation
	// The intruders install malware on the victim’s system.
	KillChainPhaseIdInstallation
	// Malware opens a command channel to enable the intruders to remotely manipulate the victim's system.
	KillChainPhaseIdCommandControl
	// With hands-on keyboard access, intruders accomplish the mission’s goal.
	KillChainPhaseIdActionsonObjectives
	KillChainPhaseIdOther
)

func (k KillChainPhaseId) String() string {
	switch k {
	default:
		return strconv.Itoa(int(k))
	case KillChainPhaseIdUnknown:
		return "0"
	case KillChainPhaseIdReconnaissance:
		return "1"
	case KillChainPhaseIdWeaponization:
		return "2"
	case KillChainPhaseIdDelivery:
		return "3"
	case KillChainPhaseIdExploitation:
		return "4"
	case KillChainPhaseIdInstallation:
		return "5"
	case KillChainPhaseIdCommandControl:
		return "6"
	case KillChainPhaseIdActionsonObjectives:
		return "7"
	case KillChainPhaseIdOther:
		return "99"
	}
}

func (k KillChainPhaseId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", k.String())), nil
}

func (k *KillChainPhaseId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := KillChainPhaseIdUnknown
		*k = value
	case "1":
		value := KillChainPhaseIdReconnaissance
		*k = value
	case "2":
		value := KillChainPhaseIdWeaponization
		*k = value
	case "3":
		value := KillChainPhaseIdDelivery
		*k = value
	case "4":
		value := KillChainPhaseIdExploitation
		*k = value
	case "5":
		value := KillChainPhaseIdInstallation
		*k = value
	case "6":
		value := KillChainPhaseIdCommandControl
		*k = value
	case "7":
		value := KillChainPhaseIdActionsonObjectives
		*k = value
	case "99":
		value := KillChainPhaseIdOther
		*k = value
	}
	return nil
}
