// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Response Code ID. The normalized identifier of the DNS server response code. See <a target='_blank' href='https://datatracker.ietf.org/doc/html/rfc6895'>RFC-6895</a>.
type DnsActivityRcodeId uint8

const (
	// No Error.
	DnsActivityRcodeIdNoError DnsActivityRcodeId = iota + 1
	// Format Error.
	DnsActivityRcodeIdFormError
	// Server Failure.
	DnsActivityRcodeIdServError
	// Non-Existent Domain.
	DnsActivityRcodeIdNxDomain
	// Not Implemented.
	DnsActivityRcodeIdNotImp
	// Query Refused.
	DnsActivityRcodeIdRefused
	// Name Exists when it should not.
	DnsActivityRcodeIdYxDomain
	// RR Set Exists when it should not.
	DnsActivityRcodeIdYxrrSet
	// RR Set that should exist does not.
	DnsActivityRcodeIdNxrrSet
	// Not Authorized or Server Not Authoritative for zone.
	DnsActivityRcodeIdNotAuth
	// Name not contained in zone.
	DnsActivityRcodeIdNotZone
	// DSO-TYPE Not Implemented.
	DnsActivityRcodeIdDsotypeni
	// TSIG Signature Failure or Bad OPT Version.
	DnsActivityRcodeIdBadsigVers
	// Key not recognized.
	DnsActivityRcodeIdBadkey
	// Signature out of time window.
	DnsActivityRcodeIdBadtime
	// Bad TKEY Mode.
	DnsActivityRcodeIdBadmode
	// Duplicate key name.
	DnsActivityRcodeIdBadname
	// Algorithm not supported.
	DnsActivityRcodeIdBadalg
	// Bad Truncation.
	DnsActivityRcodeIdBadtrunc
	// Bad/missing Server Cookie.
	DnsActivityRcodeIdBadcookie
	// The codes deemed to be unassigned by the RFC (unassigned codes: 12-15, 24-3840, 4096-65534).
	DnsActivityRcodeIdUnassigned
	// The codes deemed to be reserved by the RFC (codes: 3841-4095, 65535).
	DnsActivityRcodeIdReserved
	// The dns response code is not defined by the RFC.
	DnsActivityRcodeIdOther
)

func (d DnsActivityRcodeId) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DnsActivityRcodeIdNoError:
		return "0"
	case DnsActivityRcodeIdFormError:
		return "1"
	case DnsActivityRcodeIdServError:
		return "2"
	case DnsActivityRcodeIdNxDomain:
		return "3"
	case DnsActivityRcodeIdNotImp:
		return "4"
	case DnsActivityRcodeIdRefused:
		return "5"
	case DnsActivityRcodeIdYxDomain:
		return "6"
	case DnsActivityRcodeIdYxrrSet:
		return "7"
	case DnsActivityRcodeIdNxrrSet:
		return "8"
	case DnsActivityRcodeIdNotAuth:
		return "9"
	case DnsActivityRcodeIdNotZone:
		return "10"
	case DnsActivityRcodeIdDsotypeni:
		return "11"
	case DnsActivityRcodeIdBadsigVers:
		return "16"
	case DnsActivityRcodeIdBadkey:
		return "17"
	case DnsActivityRcodeIdBadtime:
		return "18"
	case DnsActivityRcodeIdBadmode:
		return "19"
	case DnsActivityRcodeIdBadname:
		return "20"
	case DnsActivityRcodeIdBadalg:
		return "21"
	case DnsActivityRcodeIdBadtrunc:
		return "22"
	case DnsActivityRcodeIdBadcookie:
		return "23"
	case DnsActivityRcodeIdUnassigned:
		return "24"
	case DnsActivityRcodeIdReserved:
		return "25"
	case DnsActivityRcodeIdOther:
		return "99"
	}
}

func (d DnsActivityRcodeId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DnsActivityRcodeId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := DnsActivityRcodeIdNoError
		*d = value
	case "1":
		value := DnsActivityRcodeIdFormError
		*d = value
	case "2":
		value := DnsActivityRcodeIdServError
		*d = value
	case "3":
		value := DnsActivityRcodeIdNxDomain
		*d = value
	case "4":
		value := DnsActivityRcodeIdNotImp
		*d = value
	case "5":
		value := DnsActivityRcodeIdRefused
		*d = value
	case "6":
		value := DnsActivityRcodeIdYxDomain
		*d = value
	case "7":
		value := DnsActivityRcodeIdYxrrSet
		*d = value
	case "8":
		value := DnsActivityRcodeIdNxrrSet
		*d = value
	case "9":
		value := DnsActivityRcodeIdNotAuth
		*d = value
	case "10":
		value := DnsActivityRcodeIdNotZone
		*d = value
	case "11":
		value := DnsActivityRcodeIdDsotypeni
		*d = value
	case "16":
		value := DnsActivityRcodeIdBadsigVers
		*d = value
	case "17":
		value := DnsActivityRcodeIdBadkey
		*d = value
	case "18":
		value := DnsActivityRcodeIdBadtime
		*d = value
	case "19":
		value := DnsActivityRcodeIdBadmode
		*d = value
	case "20":
		value := DnsActivityRcodeIdBadname
		*d = value
	case "21":
		value := DnsActivityRcodeIdBadalg
		*d = value
	case "22":
		value := DnsActivityRcodeIdBadtrunc
		*d = value
	case "23":
		value := DnsActivityRcodeIdBadcookie
		*d = value
	case "24":
		value := DnsActivityRcodeIdUnassigned
		*d = value
	case "25":
		value := DnsActivityRcodeIdReserved
		*d = value
	case "99":
		value := DnsActivityRcodeIdOther
		*d = value
	}
	return nil
}
