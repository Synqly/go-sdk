// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Algorithm ID. The identifier of the normalized digital signature algorithm.
type DigitalSignatureAlgorithmId uint8

const (
	DigitalSignatureAlgorithmIdUnknown DigitalSignatureAlgorithmId = iota + 1
	// Digital Signature Algorithm (DSA).
	DigitalSignatureAlgorithmIdDsa
	// Rivest-Shamir-Adleman (RSA) Algorithm.
	DigitalSignatureAlgorithmIdRsa
	// Elliptic Curve Digital Signature Algorithm.
	DigitalSignatureAlgorithmIdEcdsa
	// Microsoft Authenticode Digital Signature Algorithm.
	DigitalSignatureAlgorithmIdAuthenticode
	DigitalSignatureAlgorithmIdOther
)

func (d DigitalSignatureAlgorithmId) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DigitalSignatureAlgorithmIdUnknown:
		return "0"
	case DigitalSignatureAlgorithmIdDsa:
		return "1"
	case DigitalSignatureAlgorithmIdRsa:
		return "2"
	case DigitalSignatureAlgorithmIdEcdsa:
		return "3"
	case DigitalSignatureAlgorithmIdAuthenticode:
		return "4"
	case DigitalSignatureAlgorithmIdOther:
		return "99"
	}
}

func (d DigitalSignatureAlgorithmId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DigitalSignatureAlgorithmId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := DigitalSignatureAlgorithmIdUnknown
		*d = value
	case "1":
		value := DigitalSignatureAlgorithmIdDsa
		*d = value
	case "2":
		value := DigitalSignatureAlgorithmIdRsa
		*d = value
	case "3":
		value := DigitalSignatureAlgorithmIdEcdsa
		*d = value
	case "4":
		value := DigitalSignatureAlgorithmIdAuthenticode
		*d = value
	case "99":
		value := DigitalSignatureAlgorithmIdOther
		*d = value
	}
	return nil
}
