// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Disposition ID. When security issues, such as malware or policy violations, are detected and possibly corrected, then <code>disposition_id</code> describes the action taken by the security product.
type ModuleActivityDispositionId uint8

const (
	ModuleActivityDispositionIdUnknown ModuleActivityDispositionId = iota + 1
	ModuleActivityDispositionIdAllowed
	ModuleActivityDispositionIdBlocked
	ModuleActivityDispositionIdQuarantined
	ModuleActivityDispositionIdIsolated
	ModuleActivityDispositionIdDeleted
	ModuleActivityDispositionIdDropped
	// Executed custom action such as run a command script.
	ModuleActivityDispositionIdCustomAction
	ModuleActivityDispositionIdApproved
	ModuleActivityDispositionIdRestored
	// No longer suspicious (re-scored).
	ModuleActivityDispositionIdExonerated
	ModuleActivityDispositionIdCorrected
	ModuleActivityDispositionIdPartiallyCorrected
	ModuleActivityDispositionIdUncorrected
	// Requires reboot to finish the operation.
	ModuleActivityDispositionIdDelayed
	ModuleActivityDispositionIdDetected
	ModuleActivityDispositionIdNoAction
	ModuleActivityDispositionIdLogged
	// Marked with extended attributes.
	ModuleActivityDispositionIdTagged
	ModuleActivityDispositionIdOther
)

func (m ModuleActivityDispositionId) String() string {
	switch m {
	default:
		return strconv.Itoa(int(m))
	case ModuleActivityDispositionIdUnknown:
		return "0"
	case ModuleActivityDispositionIdAllowed:
		return "1"
	case ModuleActivityDispositionIdBlocked:
		return "2"
	case ModuleActivityDispositionIdQuarantined:
		return "3"
	case ModuleActivityDispositionIdIsolated:
		return "4"
	case ModuleActivityDispositionIdDeleted:
		return "5"
	case ModuleActivityDispositionIdDropped:
		return "6"
	case ModuleActivityDispositionIdCustomAction:
		return "7"
	case ModuleActivityDispositionIdApproved:
		return "8"
	case ModuleActivityDispositionIdRestored:
		return "9"
	case ModuleActivityDispositionIdExonerated:
		return "10"
	case ModuleActivityDispositionIdCorrected:
		return "11"
	case ModuleActivityDispositionIdPartiallyCorrected:
		return "12"
	case ModuleActivityDispositionIdUncorrected:
		return "13"
	case ModuleActivityDispositionIdDelayed:
		return "14"
	case ModuleActivityDispositionIdDetected:
		return "15"
	case ModuleActivityDispositionIdNoAction:
		return "16"
	case ModuleActivityDispositionIdLogged:
		return "17"
	case ModuleActivityDispositionIdTagged:
		return "18"
	case ModuleActivityDispositionIdOther:
		return "99"
	}
}

func (m ModuleActivityDispositionId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", m.String())), nil
}

func (m *ModuleActivityDispositionId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := ModuleActivityDispositionIdUnknown
		*m = value
	case "1":
		value := ModuleActivityDispositionIdAllowed
		*m = value
	case "2":
		value := ModuleActivityDispositionIdBlocked
		*m = value
	case "3":
		value := ModuleActivityDispositionIdQuarantined
		*m = value
	case "4":
		value := ModuleActivityDispositionIdIsolated
		*m = value
	case "5":
		value := ModuleActivityDispositionIdDeleted
		*m = value
	case "6":
		value := ModuleActivityDispositionIdDropped
		*m = value
	case "7":
		value := ModuleActivityDispositionIdCustomAction
		*m = value
	case "8":
		value := ModuleActivityDispositionIdApproved
		*m = value
	case "9":
		value := ModuleActivityDispositionIdRestored
		*m = value
	case "10":
		value := ModuleActivityDispositionIdExonerated
		*m = value
	case "11":
		value := ModuleActivityDispositionIdCorrected
		*m = value
	case "12":
		value := ModuleActivityDispositionIdPartiallyCorrected
		*m = value
	case "13":
		value := ModuleActivityDispositionIdUncorrected
		*m = value
	case "14":
		value := ModuleActivityDispositionIdDelayed
		*m = value
	case "15":
		value := ModuleActivityDispositionIdDetected
		*m = value
	case "16":
		value := ModuleActivityDispositionIdNoAction
		*m = value
	case "17":
		value := ModuleActivityDispositionIdLogged
		*m = value
	case "18":
		value := ModuleActivityDispositionIdTagged
		*m = value
	case "99":
		value := ModuleActivityDispositionIdOther
		*m = value
	}
	return nil
}
