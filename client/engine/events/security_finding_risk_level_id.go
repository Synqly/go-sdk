// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Risk Level ID. The normalized risk level id.
type SecurityFindingRiskLevelId uint8

const (
	SecurityFindingRiskLevelIdInfo SecurityFindingRiskLevelId = iota + 1
	SecurityFindingRiskLevelIdLow
	SecurityFindingRiskLevelIdMedium
	SecurityFindingRiskLevelIdHigh
	SecurityFindingRiskLevelIdCritical
)

func (s SecurityFindingRiskLevelId) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SecurityFindingRiskLevelIdInfo:
		return "0"
	case SecurityFindingRiskLevelIdLow:
		return "1"
	case SecurityFindingRiskLevelIdMedium:
		return "2"
	case SecurityFindingRiskLevelIdHigh:
		return "3"
	case SecurityFindingRiskLevelIdCritical:
		return "4"
	}
}

func (s SecurityFindingRiskLevelId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SecurityFindingRiskLevelId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := SecurityFindingRiskLevelIdInfo
		*s = value
	case "1":
		value := SecurityFindingRiskLevelIdLow
		*s = value
	case "2":
		value := SecurityFindingRiskLevelIdMedium
		*s = value
	case "3":
		value := SecurityFindingRiskLevelIdHigh
		*s = value
	case "4":
		value := SecurityFindingRiskLevelIdCritical
		*s = value
	}
	return nil
}
