// This file was auto-generated by Fern from our API Definition.

package events

import (
	time "time"
)

// The Metadata object describes the metadata associated with the event. Defined by D3FEND <a target='_blank' href='https://d3fend.mitre.org/dao/artifact/d3f:Metadata/'>d3f:Metadata</a>.
type Metadata struct {
	// The unique identifier used to correlate events.
	CorrelationUid *string `json:"correlation_uid,omitempty"`
	// The Event ID or Code that the product uses to describe the event.
	EventCode *string `json:"event_code,omitempty"`
	// The schema extension used to create the event.
	Extension *Extension `json:"extension,omitempty"`
	// <p>The list of category labels attached to the event or specific attributes. Labels are user defined tags or aliases added at normalization time.</p>For example: <code>["network", "connection.ip:destination", "device.ip:source"]</code>
	Labels *[]string `json:"labels,omitempty"`
	// The event log name. For example, syslog file name or Windows logging subsystem: Security.
	LogName *string `json:"log_name,omitempty"`
	// The logging provider or logging service that logged the event. For example, Microsoft-Windows-Security-Auditing.
	LogProvider *string `json:"log_provider,omitempty"`
	// The event log schema version that specifies the format of the original event. For example syslog version or Cisco Log Schema Version.
	LogVersion *string `json:"log_version,omitempty"`
	// <p>The time when the logging system collected and logged the event.</p>This attribute is distinct from the event time in that event time typically contain the time extracted from the original event. Most of the time, these two times will be different.
	LoggedTime *Timestamp `json:"logged_time,omitempty"`
	// <p>The time when the logging system collected and logged the event.</p>This attribute is distinct from the event time in that event time typically contain the time extracted from the original event. Most of the time, these two times will be different.
	LoggedTimeDt *time.Time `json:"logged_time_dt,omitempty"`
	// The time when the event was last modified or enriched.
	ModifiedTime *Timestamp `json:"modified_time,omitempty"`
	// The time when the event was last modified or enriched.
	ModifiedTimeDt *time.Time `json:"modified_time_dt,omitempty"`
	// The original event time as reported by the event source. For example, the time in the original format from system event log such as Syslog on Unix/Linux and the System event file on Windows. Omit if event is generated instead of collected via logs.
	OriginalTime *string `json:"original_time,omitempty"`
	// The event processed time, such as an ETL operation.
	ProcessedTime *Timestamp `json:"processed_time,omitempty"`
	// The event processed time, such as an ETL operation.
	ProcessedTimeDt *time.Time `json:"processed_time_dt,omitempty"`
	// The product that reported the event.
	Product *Product `json:"product,omitempty"`
	// The list of profiles used to create the event.
	Profiles *[]string `json:"profiles,omitempty"`
	// Sequence number of the event. The sequence number is a value available in some events, to make the exact ordering of events unambiguous, regardless of the event time precision.
	Sequence *int `json:"sequence,omitempty"`
	// The logging system-assigned unique identifier of an event instance.
	Uid *string `json:"uid,omitempty"`
	// The version of the OCSF schema, using Semantic Versioning Specification (<a target='_blank' href='https://semver.org'>SemVer</a>). For example: 1.0.0. Event consumers use the version to determine the available event attributes.
	Version string `json:"version"`
}
