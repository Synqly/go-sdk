// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Impact ID. The normalized impact of the finding.
type SecurityFindingImpactId uint8

const (
	SecurityFindingImpactIdUnknown SecurityFindingImpactId = iota + 1
	SecurityFindingImpactIdLow
	SecurityFindingImpactIdMedium
	SecurityFindingImpactIdHigh
	SecurityFindingImpactIdCritical
	// The detection impact is not mapped. See the <code>impact</code> attribute, which contains a data source specific value.
	SecurityFindingImpactIdOther
)

func (s SecurityFindingImpactId) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SecurityFindingImpactIdUnknown:
		return "0"
	case SecurityFindingImpactIdLow:
		return "1"
	case SecurityFindingImpactIdMedium:
		return "2"
	case SecurityFindingImpactIdHigh:
		return "3"
	case SecurityFindingImpactIdCritical:
		return "4"
	case SecurityFindingImpactIdOther:
		return "99"
	}
}

func (s SecurityFindingImpactId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SecurityFindingImpactId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := SecurityFindingImpactIdUnknown
		*s = value
	case "1":
		value := SecurityFindingImpactIdLow
		*s = value
	case "2":
		value := SecurityFindingImpactIdMedium
		*s = value
	case "3":
		value := SecurityFindingImpactIdHigh
		*s = value
	case "4":
		value := SecurityFindingImpactIdCritical
		*s = value
	case "99":
		value := SecurityFindingImpactIdOther
		*s = value
	}
	return nil
}
