// This file was auto-generated by Fern from our API Definition.

package events

import (
	time "time"
)

// Authentication events report authentication session activities such as user attempts a logon or logoff, successfully or otherwise.
type Authentication struct {
	// The normalized identifier of the activity that triggered the event.
	ActivityId AuthenticationActivityId `json:"activity_id,omitempty"`
	// The event activity name, as defined by the activity_id.
	ActivityName *string `json:"activity_name,omitempty"`
	// The actor that requested the authentication.
	Actor *Actor `json:"actor,omitempty"`
	// Describes details about a typical API (Application Programming Interface) call.
	Api *Api `json:"api,omitempty"`
	// The authentication protocol as defined by the caption of 'auth_protocol_id'. In the case of 'Other', it is defined by the event source.
	AuthProtocol *string `json:"auth_protocol,omitempty"`
	// The normalized identifier of the authentication protocol used to create the user session.
	AuthProtocolId *AuthenticationAuthProtocolId `json:"auth_protocol_id,omitempty"`
	// The event category name, as defined by category_uid value: <code>Identity & Access Management</code>.
	CategoryName *string `json:"category_name,omitempty"`
	// The category unique identifier of the event.
	CategoryUid AuthenticationCategoryUid `json:"category_uid,omitempty"`
	// The certificate associated with the authentication or pre-authentication (Kerberos).
	Certificate *Certificate `json:"certificate,omitempty"`
	// The event class name, as defined by class_uid value: <code>Authentication</code>.
	ClassName *string `json:"class_name,omitempty"`
	// Describes details about the Cloud environment where the event was originally created or logged.
	Cloud *Cloud `json:"cloud,omitempty"`
	// The number of times that events in the same logical group occurred during the event <strong>Start Time</strong> to <strong>End Time</strong> period.
	Count *int `json:"count,omitempty"`
	// An addressable device, computer system or host.
	Device *Device `json:"device,omitempty"`
	// The endpoint to which the authentication was targeted.
	DstEndpoint *NetworkEndpoint `json:"dst_endpoint,omitempty"`
	// The event duration or aggregate time, the amount of time the event covers from <code>start_time</code> to <code>end_time</code> in milliseconds.
	Duration *int `json:"duration,omitempty"`
	// The end time of a time period, or the time of the most recent event included in the aggregate event.
	EndTime *Timestamp `json:"end_time,omitempty"`
	// The end time of a time period, or the time of the most recent event included in the aggregate event.
	EndTimeDt *time.Time `json:"end_time_dt,omitempty"`
	// The additional information from an external data source, which is associated with the event. For example add location information for the IP address in the DNS answers:</p><code>[{"name": "answers.ip", "value": "92.24.47.250", "type": "location", "data": {"city": "Socotra", "continent": "Asia", "coordinates": [-25.4153, 17.0743], "country": "YE", "desc": "Yemen"}}]</code>
	Enrichments *[]*Enrichment `json:"enrichments,omitempty"`
	// Details about the underlying http request.
	HttpRequest *HttpRequest `json:"http_request,omitempty"`
	// Indicates whether the credentials were passed in clear text.<p><b>Note:</b> True if the credentials were passed in a clear text protocol such as FTP or TELNET, or if Windows detected that a user's logon password was passed to the authentication package in clear text.</p>
	IsCleartext *bool `json:"is_cleartext,omitempty"`
	// Indicates whether Multi Factor Authentication was used during authentication.
	IsMfa *bool `json:"is_mfa,omitempty"`
	// Indicates logon is from a device not seen before or a first time account logon.
	IsNewLogon *bool `json:"is_new_logon,omitempty"`
	// The attempted authentication is over a remote connection.
	IsRemote *bool `json:"is_remote,omitempty"`
	// The trusted process that validated the authentication credentials.
	LogonProcess *Process `json:"logon_process,omitempty"`
	// The logon type, normalized to the caption of the logon_type_id value. In the case of 'Other', it is defined by the event source.
	LogonType *string `json:"logon_type,omitempty"`
	// The normalized logon type identifier.
	LogonTypeId *AuthenticationLogonTypeId `json:"logon_type_id,omitempty"`
	// The description of the event, as defined by the event source.
	Message *string `json:"message,omitempty"`
	// The metadata associated with the event.
	Metadata *Metadata `json:"metadata,omitempty"`
	// The observables associated with the event.
	Observables *[]*Observable `json:"observables,omitempty"`
	// The event data as received from the event source.
	RawData *string `json:"raw_data,omitempty"`
	// The service or gateway to which the user or process is being authenticated
	Service *Service `json:"service,omitempty"`
	// The authenticated user or service session.
	Session *Session `json:"session,omitempty"`
	// The event severity, normalized to the caption of the severity_id value. In the case of 'Other', it is defined by the event source.
	Severity *string `json:"severity,omitempty"`
	// <p>The normalized identifier of the event severity.</p>The normalized severity is a measurement the effort and expense required to manage and resolve an event or incident. Smaller numerical values represent lower impact events, and larger numerical values represent higher impact events.
	SeverityId SeverityId `json:"severity_id,omitempty"`
	// The Endpoint from which the authentication was requested.
	SrcEndpoint *NetworkEndpoint `json:"src_endpoint,omitempty"`
	// The start time of a time period, or the time of the least recent event included in the aggregate event.
	StartTime *Timestamp `json:"start_time,omitempty"`
	// The start time of a time period, or the time of the least recent event included in the aggregate event.
	StartTimeDt *time.Time `json:"start_time_dt,omitempty"`
	// The event status, normalized to the caption of the status_id value. In the case of 'Other', it is defined by the event source.
	Status *string `json:"status,omitempty"`
	// The event status code, as reported by the event source.<br /><br />For example, in a Windows Failed Authentication event, this would be the value of 'Failure Code', e.g. 0x18.
	StatusCode *string `json:"status_code,omitempty"`
	// The details about the authentication request. For example, possible details for Windows logon or logoff events are:<ul><li>Success</li><ul><li>LOGOFF_USER_INITIATED</li><li>LOGOFF_OTHER</li></ul><li>Failure</li><ul><li>USER_DOES_NOT_EXIST</li><li>INVALID_CREDENTIALS</li><li>ACCOUNT_DISABLED</li><li>ACCOUNT_LOCKED_OUT</li><li>PASSWORD_EXPIRED</li></ul></ul>
	StatusDetail *string `json:"status_detail,omitempty"`
	// The normalized identifier of the event status.
	StatusId *StatusId `json:"status_id,omitempty"`
	// The normalized event occurrence time.
	Time Timestamp `json:"time"`
	// The normalized event occurrence time.
	TimeDt *time.Time `json:"time_dt,omitempty"`
	// The number of minutes that the reported event <code>time</code> is ahead or behind UTC, in the range -1,080 to +1,080.
	TimezoneOffset *int `json:"timezone_offset,omitempty"`
	// The event type name, as defined by the type_uid.
	TypeName *string `json:"type_name,omitempty"`
	// The event type ID. It identifies the event's semantics and structure. The value is calculated by the logging system as: <code>class_uid * 100 + activity_id</code>.
	TypeUid AuthenticationTypeUid `json:"type_uid,omitempty"`
	// The attributes that are not mapped to the event schema. The names and values of those attributes are specific to the event source.
	Unmapped *Object `json:"unmapped,omitempty"`
	// The subject (user/role or account) to authenticate.
	User *User `json:"user,omitempty"`
}
