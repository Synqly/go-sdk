// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Run State ID. The run state ID of the job.
type JobRunStateId uint8

const (
	JobRunStateIdUnknown JobRunStateId = iota + 1
	JobRunStateIdReady
	JobRunStateIdQueued
	JobRunStateIdRunning
	JobRunStateIdStopped
	JobRunStateIdOther
)

func (j JobRunStateId) String() string {
	switch j {
	default:
		return strconv.Itoa(int(j))
	case JobRunStateIdUnknown:
		return "0"
	case JobRunStateIdReady:
		return "1"
	case JobRunStateIdQueued:
		return "2"
	case JobRunStateIdRunning:
		return "3"
	case JobRunStateIdStopped:
		return "4"
	case JobRunStateIdOther:
		return "99"
	}
}

func (j JobRunStateId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", j.String())), nil
}

func (j *JobRunStateId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := JobRunStateIdUnknown
		*j = value
	case "1":
		value := JobRunStateIdReady
		*j = value
	case "2":
		value := JobRunStateIdQueued
		*j = value
	case "3":
		value := JobRunStateIdRunning
		*j = value
	case "4":
		value := JobRunStateIdStopped
		*j = value
	case "99":
		value := JobRunStateIdOther
		*j = value
	}
	return nil
}
