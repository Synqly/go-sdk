// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Direction ID. The normalized identifier of the direction of the initiated connection, traffic, or email.
type NetworkConnectionInfoDirectionId uint8

const (
	// Connection direction is unknown.
	NetworkConnectionInfoDirectionIdUnknown NetworkConnectionInfoDirectionId = iota + 1
	// Inbound network connection. The connection was originated from the Internet or outside network, destined for services on the inside network.
	NetworkConnectionInfoDirectionIdInbound
	// Outbound network connection. The connection was originated from inside the network, destined for services on the Internet or outside network.
	NetworkConnectionInfoDirectionIdOutbound
	// Lateral network connection. The connection was originated from inside the network, destined for services on the inside network.
	NetworkConnectionInfoDirectionIdLateral
	NetworkConnectionInfoDirectionIdOther
)

func (n NetworkConnectionInfoDirectionId) String() string {
	switch n {
	default:
		return strconv.Itoa(int(n))
	case NetworkConnectionInfoDirectionIdUnknown:
		return "0"
	case NetworkConnectionInfoDirectionIdInbound:
		return "1"
	case NetworkConnectionInfoDirectionIdOutbound:
		return "2"
	case NetworkConnectionInfoDirectionIdLateral:
		return "3"
	case NetworkConnectionInfoDirectionIdOther:
		return "99"
	}
}

func (n NetworkConnectionInfoDirectionId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", n.String())), nil
}

func (n *NetworkConnectionInfoDirectionId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := NetworkConnectionInfoDirectionIdUnknown
		*n = value
	case "1":
		value := NetworkConnectionInfoDirectionIdInbound
		*n = value
	case "2":
		value := NetworkConnectionInfoDirectionIdOutbound
		*n = value
	case "3":
		value := NetworkConnectionInfoDirectionIdLateral
		*n = value
	case "99":
		value := NetworkConnectionInfoDirectionIdOther
		*n = value
	}
	return nil
}
