// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Injection Type ID. The normalized identifier of the process injection method.
type ProcessActivityInjectionTypeId uint8

const (
	ProcessActivityInjectionTypeIdUnknown ProcessActivityInjectionTypeId = iota + 1
	ProcessActivityInjectionTypeIdRemoteThread
	ProcessActivityInjectionTypeIdLoadLibrary
	ProcessActivityInjectionTypeIdOther
)

func (p ProcessActivityInjectionTypeId) String() string {
	switch p {
	default:
		return strconv.Itoa(int(p))
	case ProcessActivityInjectionTypeIdUnknown:
		return "0"
	case ProcessActivityInjectionTypeIdRemoteThread:
		return "1"
	case ProcessActivityInjectionTypeIdLoadLibrary:
		return "2"
	case ProcessActivityInjectionTypeIdOther:
		return "99"
	}
}

func (p ProcessActivityInjectionTypeId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", p.String())), nil
}

func (p *ProcessActivityInjectionTypeId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := ProcessActivityInjectionTypeIdUnknown
		*p = value
	case "1":
		value := ProcessActivityInjectionTypeIdRemoteThread
		*p = value
	case "2":
		value := ProcessActivityInjectionTypeIdLoadLibrary
		*p = value
	case "99":
		value := ProcessActivityInjectionTypeIdOther
		*p = value
	}
	return nil
}
