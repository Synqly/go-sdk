// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Disposition ID. When security issues, such as malware or policy violations, are detected and possibly corrected, then <code>disposition_id</code> describes the action taken by the security product.
type DnsActivityDispositionId uint8

const (
	DnsActivityDispositionIdUnknown DnsActivityDispositionId = iota + 1
	DnsActivityDispositionIdAllowed
	DnsActivityDispositionIdBlocked
	DnsActivityDispositionIdQuarantined
	DnsActivityDispositionIdIsolated
	DnsActivityDispositionIdDeleted
	DnsActivityDispositionIdDropped
	// Executed custom action such as run a command script.
	DnsActivityDispositionIdCustomAction
	DnsActivityDispositionIdApproved
	DnsActivityDispositionIdRestored
	// No longer suspicious (re-scored).
	DnsActivityDispositionIdExonerated
	DnsActivityDispositionIdCorrected
	DnsActivityDispositionIdPartiallyCorrected
	DnsActivityDispositionIdUncorrected
	// Requires reboot to finish the operation.
	DnsActivityDispositionIdDelayed
	DnsActivityDispositionIdDetected
	DnsActivityDispositionIdNoAction
	DnsActivityDispositionIdLogged
	// Marked with extended attributes.
	DnsActivityDispositionIdTagged
	DnsActivityDispositionIdOther
)

func (d DnsActivityDispositionId) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DnsActivityDispositionIdUnknown:
		return "0"
	case DnsActivityDispositionIdAllowed:
		return "1"
	case DnsActivityDispositionIdBlocked:
		return "2"
	case DnsActivityDispositionIdQuarantined:
		return "3"
	case DnsActivityDispositionIdIsolated:
		return "4"
	case DnsActivityDispositionIdDeleted:
		return "5"
	case DnsActivityDispositionIdDropped:
		return "6"
	case DnsActivityDispositionIdCustomAction:
		return "7"
	case DnsActivityDispositionIdApproved:
		return "8"
	case DnsActivityDispositionIdRestored:
		return "9"
	case DnsActivityDispositionIdExonerated:
		return "10"
	case DnsActivityDispositionIdCorrected:
		return "11"
	case DnsActivityDispositionIdPartiallyCorrected:
		return "12"
	case DnsActivityDispositionIdUncorrected:
		return "13"
	case DnsActivityDispositionIdDelayed:
		return "14"
	case DnsActivityDispositionIdDetected:
		return "15"
	case DnsActivityDispositionIdNoAction:
		return "16"
	case DnsActivityDispositionIdLogged:
		return "17"
	case DnsActivityDispositionIdTagged:
		return "18"
	case DnsActivityDispositionIdOther:
		return "99"
	}
}

func (d DnsActivityDispositionId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DnsActivityDispositionId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := DnsActivityDispositionIdUnknown
		*d = value
	case "1":
		value := DnsActivityDispositionIdAllowed
		*d = value
	case "2":
		value := DnsActivityDispositionIdBlocked
		*d = value
	case "3":
		value := DnsActivityDispositionIdQuarantined
		*d = value
	case "4":
		value := DnsActivityDispositionIdIsolated
		*d = value
	case "5":
		value := DnsActivityDispositionIdDeleted
		*d = value
	case "6":
		value := DnsActivityDispositionIdDropped
		*d = value
	case "7":
		value := DnsActivityDispositionIdCustomAction
		*d = value
	case "8":
		value := DnsActivityDispositionIdApproved
		*d = value
	case "9":
		value := DnsActivityDispositionIdRestored
		*d = value
	case "10":
		value := DnsActivityDispositionIdExonerated
		*d = value
	case "11":
		value := DnsActivityDispositionIdCorrected
		*d = value
	case "12":
		value := DnsActivityDispositionIdPartiallyCorrected
		*d = value
	case "13":
		value := DnsActivityDispositionIdUncorrected
		*d = value
	case "14":
		value := DnsActivityDispositionIdDelayed
		*d = value
	case "15":
		value := DnsActivityDispositionIdDetected
		*d = value
	case "16":
		value := DnsActivityDispositionIdNoAction
		*d = value
	case "17":
		value := DnsActivityDispositionIdLogged
		*d = value
	case "18":
		value := DnsActivityDispositionIdTagged
		*d = value
	case "99":
		value := DnsActivityDispositionIdOther
		*d = value
	}
	return nil
}
