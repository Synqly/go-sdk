// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Type ID. The event type ID. It identifies the event's semantics and structure. The value is calculated by the logging system as: <code>class_uid * 100 + activity_id</code>.
type FileActivityTypeUid uint8

const (
	FileActivityTypeUidFileSystemActivityUnknown FileActivityTypeUid = iota + 1
	// A request to create a new file on a file system.
	FileActivityTypeUidFileSystemActivityCreate
	// A request to read data from a file on a file system.
	FileActivityTypeUidFileSystemActivityRead
	// A request to write data to a file on a file system.
	FileActivityTypeUidFileSystemActivityUpdate
	// A request to delete a file on a file system.
	FileActivityTypeUidFileSystemActivityDelete
	// A request to rename a file on a file system.
	FileActivityTypeUidFileSystemActivityRename
	// A request to set attributes for a file on a file system.
	FileActivityTypeUidFileSystemActivitySetAttributes
	// A request to set security for a file on a file system.
	FileActivityTypeUidFileSystemActivitySetSecurity
	// A request to get attributes for a file on a file system.
	FileActivityTypeUidFileSystemActivityGetAttributes
	// A request to get security for a file on a file system.
	FileActivityTypeUidFileSystemActivityGetSecurity
	// A request to encrypt a file on a file system.
	FileActivityTypeUidFileSystemActivityEncrypt
	// A request to decrypt a file on a file system.
	FileActivityTypeUidFileSystemActivityDecrypt
	// A request to mount a file on a file system.
	FileActivityTypeUidFileSystemActivityMount
	// A request to unmount a file from a file system.
	FileActivityTypeUidFileSystemActivityUnmount
	// A request to create a file handle.
	FileActivityTypeUidFileSystemActivityOpen
	FileActivityTypeUidFileSystemActivityOther
)

func (f FileActivityTypeUid) String() string {
	switch f {
	default:
		return strconv.Itoa(int(f))
	case FileActivityTypeUidFileSystemActivityUnknown:
		return "100100"
	case FileActivityTypeUidFileSystemActivityCreate:
		return "100101"
	case FileActivityTypeUidFileSystemActivityRead:
		return "100102"
	case FileActivityTypeUidFileSystemActivityUpdate:
		return "100103"
	case FileActivityTypeUidFileSystemActivityDelete:
		return "100104"
	case FileActivityTypeUidFileSystemActivityRename:
		return "100105"
	case FileActivityTypeUidFileSystemActivitySetAttributes:
		return "100106"
	case FileActivityTypeUidFileSystemActivitySetSecurity:
		return "100107"
	case FileActivityTypeUidFileSystemActivityGetAttributes:
		return "100108"
	case FileActivityTypeUidFileSystemActivityGetSecurity:
		return "100109"
	case FileActivityTypeUidFileSystemActivityEncrypt:
		return "100110"
	case FileActivityTypeUidFileSystemActivityDecrypt:
		return "100111"
	case FileActivityTypeUidFileSystemActivityMount:
		return "100112"
	case FileActivityTypeUidFileSystemActivityUnmount:
		return "100113"
	case FileActivityTypeUidFileSystemActivityOpen:
		return "100114"
	case FileActivityTypeUidFileSystemActivityOther:
		return "100199"
	}
}

func (f FileActivityTypeUid) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", f.String())), nil
}

func (f *FileActivityTypeUid) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "100100":
		value := FileActivityTypeUidFileSystemActivityUnknown
		*f = value
	case "100101":
		value := FileActivityTypeUidFileSystemActivityCreate
		*f = value
	case "100102":
		value := FileActivityTypeUidFileSystemActivityRead
		*f = value
	case "100103":
		value := FileActivityTypeUidFileSystemActivityUpdate
		*f = value
	case "100104":
		value := FileActivityTypeUidFileSystemActivityDelete
		*f = value
	case "100105":
		value := FileActivityTypeUidFileSystemActivityRename
		*f = value
	case "100106":
		value := FileActivityTypeUidFileSystemActivitySetAttributes
		*f = value
	case "100107":
		value := FileActivityTypeUidFileSystemActivitySetSecurity
		*f = value
	case "100108":
		value := FileActivityTypeUidFileSystemActivityGetAttributes
		*f = value
	case "100109":
		value := FileActivityTypeUidFileSystemActivityGetSecurity
		*f = value
	case "100110":
		value := FileActivityTypeUidFileSystemActivityEncrypt
		*f = value
	case "100111":
		value := FileActivityTypeUidFileSystemActivityDecrypt
		*f = value
	case "100112":
		value := FileActivityTypeUidFileSystemActivityMount
		*f = value
	case "100113":
		value := FileActivityTypeUidFileSystemActivityUnmount
		*f = value
	case "100114":
		value := FileActivityTypeUidFileSystemActivityOpen
		*f = value
	case "100199":
		value := FileActivityTypeUidFileSystemActivityOther
		*f = value
	}
	return nil
}
