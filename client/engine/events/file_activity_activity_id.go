// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Activity ID. The activity ID of the event.
type FileActivityActivityId uint8

const (
	// The event activity is unknown.
	FileActivityActivityIdUnknown FileActivityActivityId = iota + 1
	// A request to create a new file on a file system.
	FileActivityActivityIdCreate
	// A request to read data from a file on a file system.
	FileActivityActivityIdRead
	// A request to write data to a file on a file system.
	FileActivityActivityIdUpdate
	// A request to delete a file on a file system.
	FileActivityActivityIdDelete
	// A request to rename a file on a file system.
	FileActivityActivityIdRename
	// A request to set attributes for a file on a file system.
	FileActivityActivityIdSetAttributes
	// A request to set security for a file on a file system.
	FileActivityActivityIdSetSecurity
	// A request to get attributes for a file on a file system.
	FileActivityActivityIdGetAttributes
	// A request to get security for a file on a file system.
	FileActivityActivityIdGetSecurity
	// A request to encrypt a file on a file system.
	FileActivityActivityIdEncrypt
	// A request to decrypt a file on a file system.
	FileActivityActivityIdDecrypt
	// A request to mount a file on a file system.
	FileActivityActivityIdMount
	// A request to unmount a file from a file system.
	FileActivityActivityIdUnmount
	// A request to create a file handle.
	FileActivityActivityIdOpen
	// The event activity is not mapped.
	FileActivityActivityIdOther
)

func (f FileActivityActivityId) String() string {
	switch f {
	default:
		return strconv.Itoa(int(f))
	case FileActivityActivityIdUnknown:
		return "0"
	case FileActivityActivityIdCreate:
		return "1"
	case FileActivityActivityIdRead:
		return "2"
	case FileActivityActivityIdUpdate:
		return "3"
	case FileActivityActivityIdDelete:
		return "4"
	case FileActivityActivityIdRename:
		return "5"
	case FileActivityActivityIdSetAttributes:
		return "6"
	case FileActivityActivityIdSetSecurity:
		return "7"
	case FileActivityActivityIdGetAttributes:
		return "8"
	case FileActivityActivityIdGetSecurity:
		return "9"
	case FileActivityActivityIdEncrypt:
		return "10"
	case FileActivityActivityIdDecrypt:
		return "11"
	case FileActivityActivityIdMount:
		return "12"
	case FileActivityActivityIdUnmount:
		return "13"
	case FileActivityActivityIdOpen:
		return "14"
	case FileActivityActivityIdOther:
		return "99"
	}
}

func (f FileActivityActivityId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", f.String())), nil
}

func (f *FileActivityActivityId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := FileActivityActivityIdUnknown
		*f = value
	case "1":
		value := FileActivityActivityIdCreate
		*f = value
	case "2":
		value := FileActivityActivityIdRead
		*f = value
	case "3":
		value := FileActivityActivityIdUpdate
		*f = value
	case "4":
		value := FileActivityActivityIdDelete
		*f = value
	case "5":
		value := FileActivityActivityIdRename
		*f = value
	case "6":
		value := FileActivityActivityIdSetAttributes
		*f = value
	case "7":
		value := FileActivityActivityIdSetSecurity
		*f = value
	case "8":
		value := FileActivityActivityIdGetAttributes
		*f = value
	case "9":
		value := FileActivityActivityIdGetSecurity
		*f = value
	case "10":
		value := FileActivityActivityIdEncrypt
		*f = value
	case "11":
		value := FileActivityActivityIdDecrypt
		*f = value
	case "12":
		value := FileActivityActivityIdMount
		*f = value
	case "13":
		value := FileActivityActivityIdUnmount
		*f = value
	case "14":
		value := FileActivityActivityIdOpen
		*f = value
	case "99":
		value := FileActivityActivityIdOther
		*f = value
	}
	return nil
}
