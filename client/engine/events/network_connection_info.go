// This file was auto-generated by Fern from our API Definition.

package events

// The Network Connection Information object describes characteristics of a network connection. Defined by D3FEND <a target='_blank' href='https://d3fend.mitre.org/dao/artifact/d3f:NetworkSession/'>d3f:NetworkSession</a>.
type NetworkConnectionInfo struct {
	// The boundary of the connection, normalized to the caption of 'boundary_id'. In the case of 'Other', it is defined by the event source. <p> For cloud connections, this translates to the traffic-boundary(same VPC, through IGW, etc.). For traditional networks, this is described as Local, Internal, or External.</p>
	Boundary *string `json:"boundary,omitempty"`
	// <p>The normalized identifier of the boundary of the connection. </p><p> For cloud connections, this translates to the traffic-boundary (same VPC, through IGW, etc.). For traditional networks, this is described as Local, Internal, or External.</p>
	BoundaryId *NetworkConnectionInfoBoundaryId `json:"boundary_id,omitempty"`
	// The direction of the initiated connection, traffic, or email, normalized to the caption of the direction_id value. In the case of 'Other', it is defined by the event source.
	Direction *string `json:"direction,omitempty"`
	// The normalized identifier of the direction of the initiated connection, traffic, or email.
	DirectionId NetworkConnectionInfoDirectionId `json:"direction_id,omitempty"`
	// The TCP/IP protocol name in lowercase, as defined by the Internet Assigned Numbers Authority (IANA). See <a target='_blank' href='https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml'>Protocol Numbers</a>. For example: <code>tcp</code> or <code>udp</code>.
	ProtocolName *string `json:"protocol_name,omitempty"`
	// The TCP/IP protocol number, as defined by the Internet Assigned Numbers Authority (IANA). Use -1 if the protocol is not defined by IANA. See <a target='_blank' href='https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml'>Protocol Numbers</a>. For example: <code>6</code> for TCP and <code>17</code> for UDP.
	ProtocolNum *int `json:"protocol_num,omitempty"`
	// The Internet Protocol version.
	ProtocolVer *string `json:"protocol_ver,omitempty"`
	// The Internet Protocol version identifier.
	ProtocolVerId *NetworkConnectionInfoProtocolVerId `json:"protocol_ver_id,omitempty"`
	// The network connection TCP header flags (i.e., control bits).
	TcpFlags *int `json:"tcp_flags,omitempty"`
	// The unique identifier of the connection.
	Uid *string `json:"uid,omitempty"`
}
