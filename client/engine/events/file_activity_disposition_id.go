// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Disposition ID. When security issues, such as malware or policy violations, are detected and possibly corrected, then <code>disposition_id</code> describes the action taken by the security product.
type FileActivityDispositionId uint8

const (
	FileActivityDispositionIdUnknown FileActivityDispositionId = iota + 1
	FileActivityDispositionIdAllowed
	FileActivityDispositionIdBlocked
	FileActivityDispositionIdQuarantined
	FileActivityDispositionIdIsolated
	FileActivityDispositionIdDeleted
	FileActivityDispositionIdDropped
	// Executed custom action such as run a command script.
	FileActivityDispositionIdCustomAction
	FileActivityDispositionIdApproved
	FileActivityDispositionIdRestored
	// No longer suspicious (re-scored).
	FileActivityDispositionIdExonerated
	FileActivityDispositionIdCorrected
	FileActivityDispositionIdPartiallyCorrected
	FileActivityDispositionIdUncorrected
	// Requires reboot to finish the operation.
	FileActivityDispositionIdDelayed
	FileActivityDispositionIdDetected
	FileActivityDispositionIdNoAction
	FileActivityDispositionIdLogged
	// Marked with extended attributes.
	FileActivityDispositionIdTagged
	FileActivityDispositionIdOther
)

func (f FileActivityDispositionId) String() string {
	switch f {
	default:
		return strconv.Itoa(int(f))
	case FileActivityDispositionIdUnknown:
		return "0"
	case FileActivityDispositionIdAllowed:
		return "1"
	case FileActivityDispositionIdBlocked:
		return "2"
	case FileActivityDispositionIdQuarantined:
		return "3"
	case FileActivityDispositionIdIsolated:
		return "4"
	case FileActivityDispositionIdDeleted:
		return "5"
	case FileActivityDispositionIdDropped:
		return "6"
	case FileActivityDispositionIdCustomAction:
		return "7"
	case FileActivityDispositionIdApproved:
		return "8"
	case FileActivityDispositionIdRestored:
		return "9"
	case FileActivityDispositionIdExonerated:
		return "10"
	case FileActivityDispositionIdCorrected:
		return "11"
	case FileActivityDispositionIdPartiallyCorrected:
		return "12"
	case FileActivityDispositionIdUncorrected:
		return "13"
	case FileActivityDispositionIdDelayed:
		return "14"
	case FileActivityDispositionIdDetected:
		return "15"
	case FileActivityDispositionIdNoAction:
		return "16"
	case FileActivityDispositionIdLogged:
		return "17"
	case FileActivityDispositionIdTagged:
		return "18"
	case FileActivityDispositionIdOther:
		return "99"
	}
}

func (f FileActivityDispositionId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", f.String())), nil
}

func (f *FileActivityDispositionId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := FileActivityDispositionIdUnknown
		*f = value
	case "1":
		value := FileActivityDispositionIdAllowed
		*f = value
	case "2":
		value := FileActivityDispositionIdBlocked
		*f = value
	case "3":
		value := FileActivityDispositionIdQuarantined
		*f = value
	case "4":
		value := FileActivityDispositionIdIsolated
		*f = value
	case "5":
		value := FileActivityDispositionIdDeleted
		*f = value
	case "6":
		value := FileActivityDispositionIdDropped
		*f = value
	case "7":
		value := FileActivityDispositionIdCustomAction
		*f = value
	case "8":
		value := FileActivityDispositionIdApproved
		*f = value
	case "9":
		value := FileActivityDispositionIdRestored
		*f = value
	case "10":
		value := FileActivityDispositionIdExonerated
		*f = value
	case "11":
		value := FileActivityDispositionIdCorrected
		*f = value
	case "12":
		value := FileActivityDispositionIdPartiallyCorrected
		*f = value
	case "13":
		value := FileActivityDispositionIdUncorrected
		*f = value
	case "14":
		value := FileActivityDispositionIdDelayed
		*f = value
	case "15":
		value := FileActivityDispositionIdDetected
		*f = value
	case "16":
		value := FileActivityDispositionIdNoAction
		*f = value
	case "17":
		value := FileActivityDispositionIdLogged
		*f = value
	case "18":
		value := FileActivityDispositionIdTagged
		*f = value
	case "99":
		value := FileActivityDispositionIdOther
		*f = value
	}
	return nil
}
