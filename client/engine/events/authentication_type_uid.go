// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Type ID. The event type ID. It identifies the event's semantics and structure. The value is calculated by the logging system as: <code>class_uid * 100 + activity_id</code>.
type AuthenticationTypeUid uint8

const (
	AuthenticationTypeUidAuthenticationUnknown AuthenticationTypeUid = iota + 1
	// A new logon session was requested.
	AuthenticationTypeUidAuthenticationLogon
	// A logon session was terminated and no longer exists.
	AuthenticationTypeUidAuthenticationLogoff
	// A Kerberos authentication ticket (TGT) was requested.
	AuthenticationTypeUidAuthenticationAuthenticationTicket
	// A Kerberos service ticket was requested.
	AuthenticationTypeUidAuthenticationServiceTicket
	AuthenticationTypeUidAuthenticationOther
)

func (a AuthenticationTypeUid) String() string {
	switch a {
	default:
		return strconv.Itoa(int(a))
	case AuthenticationTypeUidAuthenticationUnknown:
		return "300200"
	case AuthenticationTypeUidAuthenticationLogon:
		return "300201"
	case AuthenticationTypeUidAuthenticationLogoff:
		return "300202"
	case AuthenticationTypeUidAuthenticationAuthenticationTicket:
		return "300203"
	case AuthenticationTypeUidAuthenticationServiceTicket:
		return "300204"
	case AuthenticationTypeUidAuthenticationOther:
		return "300299"
	}
}

func (a AuthenticationTypeUid) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", a.String())), nil
}

func (a *AuthenticationTypeUid) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "300200":
		value := AuthenticationTypeUidAuthenticationUnknown
		*a = value
	case "300201":
		value := AuthenticationTypeUidAuthenticationLogon
		*a = value
	case "300202":
		value := AuthenticationTypeUidAuthenticationLogoff
		*a = value
	case "300203":
		value := AuthenticationTypeUidAuthenticationAuthenticationTicket
		*a = value
	case "300204":
		value := AuthenticationTypeUidAuthenticationServiceTicket
		*a = value
	case "300299":
		value := AuthenticationTypeUidAuthenticationOther
		*a = value
	}
	return nil
}
