// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Type ID. The account type identifier.
type UserTypeId uint8

const (
	// The type is unknown.
	UserTypeIdUnknown UserTypeId = iota + 1
	// Regular user account.
	UserTypeIdUser
	// Admin/root user account.
	UserTypeIdAdmin
	// System account. For example, Windows computer accounts with a trailing dollar sign ($).
	UserTypeIdSystem
	// The type is not mapped. See the <code>type</code> attribute, which may contain a data source specific value.
	UserTypeIdOther
)

func (u UserTypeId) String() string {
	switch u {
	default:
		return strconv.Itoa(int(u))
	case UserTypeIdUnknown:
		return "0"
	case UserTypeIdUser:
		return "1"
	case UserTypeIdAdmin:
		return "2"
	case UserTypeIdSystem:
		return "3"
	case UserTypeIdOther:
		return "99"
	}
}

func (u UserTypeId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", u.String())), nil
}

func (u *UserTypeId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := UserTypeIdUnknown
		*u = value
	case "1":
		value := UserTypeIdUser
		*u = value
	case "2":
		value := UserTypeIdAdmin
		*u = value
	case "3":
		value := UserTypeIdSystem
		*u = value
	case "99":
		value := UserTypeIdOther
		*u = value
	}
	return nil
}
