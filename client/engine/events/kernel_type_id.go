// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Type ID. The type of the kernel resource.
type KernelTypeId uint8

const (
	// The type is unknown.
	KernelTypeIdUnknown KernelTypeId = iota + 1
	KernelTypeIdSharedMutex
	KernelTypeIdSystemCall
	// The type is not mapped. See the <code>type</code> attribute, which may contain a data source specific value.
	KernelTypeIdOther
)

func (k KernelTypeId) String() string {
	switch k {
	default:
		return strconv.Itoa(int(k))
	case KernelTypeIdUnknown:
		return "0"
	case KernelTypeIdSharedMutex:
		return "1"
	case KernelTypeIdSystemCall:
		return "2"
	case KernelTypeIdOther:
		return "99"
	}
}

func (k KernelTypeId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", k.String())), nil
}

func (k *KernelTypeId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := KernelTypeIdUnknown
		*k = value
	case "1":
		value := KernelTypeIdSharedMutex
		*k = value
	case "2":
		value := KernelTypeIdSystemCall
		*k = value
	case "99":
		value := KernelTypeIdOther
		*k = value
	}
	return nil
}
