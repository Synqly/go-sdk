// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Classification IDs. The list of normalized identifiers of the malware classifications. Reference: <a target='_blank' href='https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_oxlc4df65spl'>STIX Malware Types</a>
type MalwareClassificationIds uint8

const (
	MalwareClassificationIdsUnknown MalwareClassificationIds = iota + 1
	MalwareClassificationIdsAdware
	MalwareClassificationIdsBackdoor
	MalwareClassificationIdsBot
	MalwareClassificationIdsBootkit
	MalwareClassificationIdsDdos
	MalwareClassificationIdsDownloader
	MalwareClassificationIdsDropper
	MalwareClassificationIdsExploitKit
	MalwareClassificationIdsKeylogger
	MalwareClassificationIdsRansomware
	MalwareClassificationIdsRemoteAccessTrojan
	MalwareClassificationIdsResourceExploitation
	MalwareClassificationIdsRogueSecuritySoftware
	MalwareClassificationIdsRootkit
	MalwareClassificationIdsScreenCapture
	MalwareClassificationIdsSpyware
	MalwareClassificationIdsTrojan
	MalwareClassificationIdsVirus
	MalwareClassificationIdsWebshell
	MalwareClassificationIdsWiper
	MalwareClassificationIdsWorm
	MalwareClassificationIdsOther
)

func (m MalwareClassificationIds) String() string {
	switch m {
	default:
		return strconv.Itoa(int(m))
	case MalwareClassificationIdsUnknown:
		return "0"
	case MalwareClassificationIdsAdware:
		return "1"
	case MalwareClassificationIdsBackdoor:
		return "2"
	case MalwareClassificationIdsBot:
		return "3"
	case MalwareClassificationIdsBootkit:
		return "4"
	case MalwareClassificationIdsDdos:
		return "5"
	case MalwareClassificationIdsDownloader:
		return "6"
	case MalwareClassificationIdsDropper:
		return "7"
	case MalwareClassificationIdsExploitKit:
		return "8"
	case MalwareClassificationIdsKeylogger:
		return "9"
	case MalwareClassificationIdsRansomware:
		return "10"
	case MalwareClassificationIdsRemoteAccessTrojan:
		return "11"
	case MalwareClassificationIdsResourceExploitation:
		return "13"
	case MalwareClassificationIdsRogueSecuritySoftware:
		return "14"
	case MalwareClassificationIdsRootkit:
		return "15"
	case MalwareClassificationIdsScreenCapture:
		return "16"
	case MalwareClassificationIdsSpyware:
		return "17"
	case MalwareClassificationIdsTrojan:
		return "18"
	case MalwareClassificationIdsVirus:
		return "19"
	case MalwareClassificationIdsWebshell:
		return "20"
	case MalwareClassificationIdsWiper:
		return "21"
	case MalwareClassificationIdsWorm:
		return "22"
	case MalwareClassificationIdsOther:
		return "99"
	}
}

func (m MalwareClassificationIds) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", m.String())), nil
}

func (m *MalwareClassificationIds) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := MalwareClassificationIdsUnknown
		*m = value
	case "1":
		value := MalwareClassificationIdsAdware
		*m = value
	case "2":
		value := MalwareClassificationIdsBackdoor
		*m = value
	case "3":
		value := MalwareClassificationIdsBot
		*m = value
	case "4":
		value := MalwareClassificationIdsBootkit
		*m = value
	case "5":
		value := MalwareClassificationIdsDdos
		*m = value
	case "6":
		value := MalwareClassificationIdsDownloader
		*m = value
	case "7":
		value := MalwareClassificationIdsDropper
		*m = value
	case "8":
		value := MalwareClassificationIdsExploitKit
		*m = value
	case "9":
		value := MalwareClassificationIdsKeylogger
		*m = value
	case "10":
		value := MalwareClassificationIdsRansomware
		*m = value
	case "11":
		value := MalwareClassificationIdsRemoteAccessTrojan
		*m = value
	case "13":
		value := MalwareClassificationIdsResourceExploitation
		*m = value
	case "14":
		value := MalwareClassificationIdsRogueSecuritySoftware
		*m = value
	case "15":
		value := MalwareClassificationIdsRootkit
		*m = value
	case "16":
		value := MalwareClassificationIdsScreenCapture
		*m = value
	case "17":
		value := MalwareClassificationIdsSpyware
		*m = value
	case "18":
		value := MalwareClassificationIdsTrojan
		*m = value
	case "19":
		value := MalwareClassificationIdsVirus
		*m = value
	case "20":
		value := MalwareClassificationIdsWebshell
		*m = value
	case "21":
		value := MalwareClassificationIdsWiper
		*m = value
	case "22":
		value := MalwareClassificationIdsWorm
		*m = value
	case "99":
		value := MalwareClassificationIdsOther
		*m = value
	}
	return nil
}
