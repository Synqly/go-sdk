// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Type ID. The event type ID. It identifies the event's semantics and structure. The value is calculated by the logging system as: <code>class_uid * 100 + activity_id</code>.
type AccountChangeTypeUid uint8

const (
	AccountChangeTypeUidAccountChangeUnknown AccountChangeTypeUid = iota + 1
	// A user/role was created.
	AccountChangeTypeUidAccountChangeCreate
	// A user/role was enabled.
	AccountChangeTypeUidAccountChangeEnable
	// An attempt was made to change an account's password.
	AccountChangeTypeUidAccountChangePasswordChange
	// An attempt was made to reset an account's password.
	AccountChangeTypeUidAccountChangePasswordReset
	// A user/role was disabled.
	AccountChangeTypeUidAccountChangeDisable
	// A user/role was deleted.
	AccountChangeTypeUidAccountChangeDelete
	// A user/role was changed.
	AccountChangeTypeUidAccountChangeAttachPolicy
	// A user/role was changed.
	AccountChangeTypeUidAccountChangeDetachPolicy
	// A user account was locked out.
	AccountChangeTypeUidAccountChangeLock
	AccountChangeTypeUidAccountChangeOther
)

func (a AccountChangeTypeUid) String() string {
	switch a {
	default:
		return strconv.Itoa(int(a))
	case AccountChangeTypeUidAccountChangeUnknown:
		return "300100"
	case AccountChangeTypeUidAccountChangeCreate:
		return "300101"
	case AccountChangeTypeUidAccountChangeEnable:
		return "300102"
	case AccountChangeTypeUidAccountChangePasswordChange:
		return "300103"
	case AccountChangeTypeUidAccountChangePasswordReset:
		return "300104"
	case AccountChangeTypeUidAccountChangeDisable:
		return "300105"
	case AccountChangeTypeUidAccountChangeDelete:
		return "300106"
	case AccountChangeTypeUidAccountChangeAttachPolicy:
		return "300107"
	case AccountChangeTypeUidAccountChangeDetachPolicy:
		return "300108"
	case AccountChangeTypeUidAccountChangeLock:
		return "300109"
	case AccountChangeTypeUidAccountChangeOther:
		return "300199"
	}
}

func (a AccountChangeTypeUid) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", a.String())), nil
}

func (a *AccountChangeTypeUid) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "300100":
		value := AccountChangeTypeUidAccountChangeUnknown
		*a = value
	case "300101":
		value := AccountChangeTypeUidAccountChangeCreate
		*a = value
	case "300102":
		value := AccountChangeTypeUidAccountChangeEnable
		*a = value
	case "300103":
		value := AccountChangeTypeUidAccountChangePasswordChange
		*a = value
	case "300104":
		value := AccountChangeTypeUidAccountChangePasswordReset
		*a = value
	case "300105":
		value := AccountChangeTypeUidAccountChangeDisable
		*a = value
	case "300106":
		value := AccountChangeTypeUidAccountChangeDelete
		*a = value
	case "300107":
		value := AccountChangeTypeUidAccountChangeAttachPolicy
		*a = value
	case "300108":
		value := AccountChangeTypeUidAccountChangeDetachPolicy
		*a = value
	case "300109":
		value := AccountChangeTypeUidAccountChangeLock
		*a = value
	case "300199":
		value := AccountChangeTypeUidAccountChangeOther
		*a = value
	}
	return nil
}
