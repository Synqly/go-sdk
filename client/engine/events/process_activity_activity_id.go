// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Activity ID. The normalized identifier of the activity that triggered the event.
type ProcessActivityActivityId uint8

const (
	// The event activity is unknown.
	ProcessActivityActivityIdUnknown ProcessActivityActivityId = iota + 1
	ProcessActivityActivityIdLaunch
	ProcessActivityActivityIdTerminate
	ProcessActivityActivityIdOpen
	ProcessActivityActivityIdInject
	ProcessActivityActivityIdSetUserId
	// The event activity is not mapped.
	ProcessActivityActivityIdOther
)

func (p ProcessActivityActivityId) String() string {
	switch p {
	default:
		return strconv.Itoa(int(p))
	case ProcessActivityActivityIdUnknown:
		return "0"
	case ProcessActivityActivityIdLaunch:
		return "1"
	case ProcessActivityActivityIdTerminate:
		return "2"
	case ProcessActivityActivityIdOpen:
		return "3"
	case ProcessActivityActivityIdInject:
		return "4"
	case ProcessActivityActivityIdSetUserId:
		return "5"
	case ProcessActivityActivityIdOther:
		return "99"
	}
}

func (p ProcessActivityActivityId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", p.String())), nil
}

func (p *ProcessActivityActivityId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := ProcessActivityActivityIdUnknown
		*p = value
	case "1":
		value := ProcessActivityActivityIdLaunch
		*p = value
	case "2":
		value := ProcessActivityActivityIdTerminate
		*p = value
	case "3":
		value := ProcessActivityActivityIdOpen
		*p = value
	case "4":
		value := ProcessActivityActivityIdInject
		*p = value
	case "5":
		value := ProcessActivityActivityIdSetUserId
		*p = value
	case "99":
		value := ProcessActivityActivityIdOther
		*p = value
	}
	return nil
}
