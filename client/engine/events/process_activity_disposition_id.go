// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Disposition ID. When security issues, such as malware or policy violations, are detected and possibly corrected, then <code>disposition_id</code> describes the action taken by the security product.
type ProcessActivityDispositionId uint8

const (
	ProcessActivityDispositionIdUnknown ProcessActivityDispositionId = iota + 1
	ProcessActivityDispositionIdAllowed
	ProcessActivityDispositionIdBlocked
	ProcessActivityDispositionIdQuarantined
	ProcessActivityDispositionIdIsolated
	ProcessActivityDispositionIdDeleted
	ProcessActivityDispositionIdDropped
	// Executed custom action such as run a command script.
	ProcessActivityDispositionIdCustomAction
	ProcessActivityDispositionIdApproved
	ProcessActivityDispositionIdRestored
	// No longer suspicious (re-scored).
	ProcessActivityDispositionIdExonerated
	ProcessActivityDispositionIdCorrected
	ProcessActivityDispositionIdPartiallyCorrected
	ProcessActivityDispositionIdUncorrected
	// Requires reboot to finish the operation.
	ProcessActivityDispositionIdDelayed
	ProcessActivityDispositionIdDetected
	ProcessActivityDispositionIdNoAction
	ProcessActivityDispositionIdLogged
	// Marked with extended attributes.
	ProcessActivityDispositionIdTagged
	ProcessActivityDispositionIdOther
)

func (p ProcessActivityDispositionId) String() string {
	switch p {
	default:
		return strconv.Itoa(int(p))
	case ProcessActivityDispositionIdUnknown:
		return "0"
	case ProcessActivityDispositionIdAllowed:
		return "1"
	case ProcessActivityDispositionIdBlocked:
		return "2"
	case ProcessActivityDispositionIdQuarantined:
		return "3"
	case ProcessActivityDispositionIdIsolated:
		return "4"
	case ProcessActivityDispositionIdDeleted:
		return "5"
	case ProcessActivityDispositionIdDropped:
		return "6"
	case ProcessActivityDispositionIdCustomAction:
		return "7"
	case ProcessActivityDispositionIdApproved:
		return "8"
	case ProcessActivityDispositionIdRestored:
		return "9"
	case ProcessActivityDispositionIdExonerated:
		return "10"
	case ProcessActivityDispositionIdCorrected:
		return "11"
	case ProcessActivityDispositionIdPartiallyCorrected:
		return "12"
	case ProcessActivityDispositionIdUncorrected:
		return "13"
	case ProcessActivityDispositionIdDelayed:
		return "14"
	case ProcessActivityDispositionIdDetected:
		return "15"
	case ProcessActivityDispositionIdNoAction:
		return "16"
	case ProcessActivityDispositionIdLogged:
		return "17"
	case ProcessActivityDispositionIdTagged:
		return "18"
	case ProcessActivityDispositionIdOther:
		return "99"
	}
}

func (p ProcessActivityDispositionId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", p.String())), nil
}

func (p *ProcessActivityDispositionId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := ProcessActivityDispositionIdUnknown
		*p = value
	case "1":
		value := ProcessActivityDispositionIdAllowed
		*p = value
	case "2":
		value := ProcessActivityDispositionIdBlocked
		*p = value
	case "3":
		value := ProcessActivityDispositionIdQuarantined
		*p = value
	case "4":
		value := ProcessActivityDispositionIdIsolated
		*p = value
	case "5":
		value := ProcessActivityDispositionIdDeleted
		*p = value
	case "6":
		value := ProcessActivityDispositionIdDropped
		*p = value
	case "7":
		value := ProcessActivityDispositionIdCustomAction
		*p = value
	case "8":
		value := ProcessActivityDispositionIdApproved
		*p = value
	case "9":
		value := ProcessActivityDispositionIdRestored
		*p = value
	case "10":
		value := ProcessActivityDispositionIdExonerated
		*p = value
	case "11":
		value := ProcessActivityDispositionIdCorrected
		*p = value
	case "12":
		value := ProcessActivityDispositionIdPartiallyCorrected
		*p = value
	case "13":
		value := ProcessActivityDispositionIdUncorrected
		*p = value
	case "14":
		value := ProcessActivityDispositionIdDelayed
		*p = value
	case "15":
		value := ProcessActivityDispositionIdDetected
		*p = value
	case "16":
		value := ProcessActivityDispositionIdNoAction
		*p = value
	case "17":
		value := ProcessActivityDispositionIdLogged
		*p = value
	case "18":
		value := ProcessActivityDispositionIdTagged
		*p = value
	case "99":
		value := ProcessActivityDispositionIdOther
		*p = value
	}
	return nil
}
