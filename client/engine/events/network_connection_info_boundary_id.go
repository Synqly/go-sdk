// This file was auto-generated by Fern from our API Definition.

package events

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Boundary ID. <p>The normalized identifier of the boundary of the connection. </p><p> For cloud connections, this translates to the traffic-boundary (same VPC, through IGW, etc.). For traditional networks, this is described as Local, Internal, or External.</p>
type NetworkConnectionInfoBoundaryId uint8

const (
	// The connection boundary is unknown.
	NetworkConnectionInfoBoundaryIdUnknown NetworkConnectionInfoBoundaryId = iota + 1
	// Local network traffic on the same endpoint.
	NetworkConnectionInfoBoundaryIdLocalhost
	// Internal network traffic between two endpoints inside network.
	NetworkConnectionInfoBoundaryIdInternal
	// External network traffic between two endpoints on the Internet or outside the network.
	NetworkConnectionInfoBoundaryIdExternal
	// Through another resource in the same VPC
	NetworkConnectionInfoBoundaryIdSameVpc
	// Through an Internet gateway or a gateway VPC endpoint
	NetworkConnectionInfoBoundaryIdInternetVpcGateway
	// Through a virtual private gateway
	NetworkConnectionInfoBoundaryIdVirtualPrivateGateway
	// Through an intra-region VPC peering connection
	NetworkConnectionInfoBoundaryIdIntraRegionVpc
	// Through an inter-region VPC peering connection
	NetworkConnectionInfoBoundaryIdInterRegionVpc
	// Through a local gateway
	NetworkConnectionInfoBoundaryIdLocalGateway
	// Through a gateway VPC endpoint (Nitro-based instances only)
	NetworkConnectionInfoBoundaryIdGatewayVpc
	// Through an Internet gateway (Nitro-based instances only)
	NetworkConnectionInfoBoundaryIdInternetGateway
	NetworkConnectionInfoBoundaryIdOther
)

func (n NetworkConnectionInfoBoundaryId) String() string {
	switch n {
	default:
		return strconv.Itoa(int(n))
	case NetworkConnectionInfoBoundaryIdUnknown:
		return "0"
	case NetworkConnectionInfoBoundaryIdLocalhost:
		return "1"
	case NetworkConnectionInfoBoundaryIdInternal:
		return "2"
	case NetworkConnectionInfoBoundaryIdExternal:
		return "3"
	case NetworkConnectionInfoBoundaryIdSameVpc:
		return "4"
	case NetworkConnectionInfoBoundaryIdInternetVpcGateway:
		return "5"
	case NetworkConnectionInfoBoundaryIdVirtualPrivateGateway:
		return "6"
	case NetworkConnectionInfoBoundaryIdIntraRegionVpc:
		return "7"
	case NetworkConnectionInfoBoundaryIdInterRegionVpc:
		return "8"
	case NetworkConnectionInfoBoundaryIdLocalGateway:
		return "9"
	case NetworkConnectionInfoBoundaryIdGatewayVpc:
		return "10"
	case NetworkConnectionInfoBoundaryIdInternetGateway:
		return "11"
	case NetworkConnectionInfoBoundaryIdOther:
		return "99"
	}
}

func (n NetworkConnectionInfoBoundaryId) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", n.String())), nil
}

func (n *NetworkConnectionInfoBoundaryId) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "0":
		value := NetworkConnectionInfoBoundaryIdUnknown
		*n = value
	case "1":
		value := NetworkConnectionInfoBoundaryIdLocalhost
		*n = value
	case "2":
		value := NetworkConnectionInfoBoundaryIdInternal
		*n = value
	case "3":
		value := NetworkConnectionInfoBoundaryIdExternal
		*n = value
	case "4":
		value := NetworkConnectionInfoBoundaryIdSameVpc
		*n = value
	case "5":
		value := NetworkConnectionInfoBoundaryIdInternetVpcGateway
		*n = value
	case "6":
		value := NetworkConnectionInfoBoundaryIdVirtualPrivateGateway
		*n = value
	case "7":
		value := NetworkConnectionInfoBoundaryIdIntraRegionVpc
		*n = value
	case "8":
		value := NetworkConnectionInfoBoundaryIdInterRegionVpc
		*n = value
	case "9":
		value := NetworkConnectionInfoBoundaryIdLocalGateway
		*n = value
	case "10":
		value := NetworkConnectionInfoBoundaryIdGatewayVpc
		*n = value
	case "11":
		value := NetworkConnectionInfoBoundaryIdInternetGateway
		*n = value
	case "99":
		value := NetworkConnectionInfoBoundaryIdOther
		*n = value
	}
	return nil
}
