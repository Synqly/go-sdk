// This file was auto-generated by Fern from our API Definition.

package engine

import (
	http "net/http"

	core "github.com/synqly/go-sdk/client/engine/core"
)

type Client interface {
	Events() EventsClient
	Notifications() NotificationsClient
	StatusEvents() StatusEventsClient
	Status() StatusClient
	Storage() StorageClient
	Ticketing() TicketingClient
}

func NewClient(opts ...core.ClientOption) Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &client{
		baseURL:             options.BaseURL,
		httpClient:          options.HTTPClient,
		header:              options.ToHeader(),
		eventsClient:        NewEventsClient(opts...),
		notificationsClient: NewNotificationsClient(opts...),
		statusEventsClient:  NewStatusEventsClient(opts...),
		statusClient:        NewStatusClient(opts...),
		storageClient:       NewStorageClient(opts...),
		ticketingClient:     NewTicketingClient(opts...),
	}
}

type client struct {
	baseURL             string
	httpClient          core.HTTPClient
	header              http.Header
	eventsClient        EventsClient
	notificationsClient NotificationsClient
	statusEventsClient  StatusEventsClient
	statusClient        StatusClient
	storageClient       StorageClient
	ticketingClient     TicketingClient
}

func (c *client) Events() EventsClient {
	return c.eventsClient
}

func (c *client) Notifications() NotificationsClient {
	return c.notificationsClient
}

func (c *client) StatusEvents() StatusEventsClient {
	return c.statusEventsClient
}

func (c *client) Status() StatusClient {
	return c.statusClient
}

func (c *client) Storage() StorageClient {
	return c.storageClient
}

func (c *client) Ticketing() TicketingClient {
	return c.ticketingClient
}
