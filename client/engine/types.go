// This file was auto-generated by Fern from our API Definition.

package engine

import (
	fmt "fmt"
	time "time"
)

type Base struct {
	// Human-readable name for this resource
	Name string `json:"name"`
	// Time object was originally created
	CreatedAt time.Time `json:"created_at"`
	// Last time object was updated
	UpdatedAt time.Time `json:"updated_at"`
}

type ErrorBody struct {
	Status     int           `json:"status"`
	Message    *string       `json:"message,omitempty"`
	Errors     []string      `json:"errors,omitempty"`
	Parameters []*ErrorParam `json:"parameters,omitempty"`
}

type ErrorParam struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type Id = string

// Notification object
type Notification struct {
	// Human-readable name for this resource
	Name string `json:"name"`
	// Time object was originally created
	CreatedAt time.Time `json:"created_at"`
	// Last time object was updated
	UpdatedAt time.Time      `json:"updated_at"`
	Id        NotificationId `json:"id,omitempty"`
	// Notification priority
	Priority Priority `json:"priority,omitempty"`
	// Notification status
	NotificationStatus NotificationStatus `json:"notification_status,omitempty"`
	// Notification project
	Project string `json:"project"`
	// The current status of the notification.
	Status string `json:"status"`
	// Notification description.
	Description string `json:"description"`
	// Notification summary.
	Summary string `json:"summary"`
	// The notification's type.
	IssueType string `json:"issue_type"`
	// The user who created this notification.
	Creator string `json:"creator"`
	// Who notification is assigned to.
	Assignee string `json:"assignee"`
	// The notification contact information.
	Contact string `json:"contact"`
	// Associate tags with Notification
	Tags []string `json:"tags,omitempty"`
	// External URL reference
	Reference string `json:"reference"`
}

type NotificationStatus string

const (
	NotificationStatusOpen   NotificationStatus = "OPEN"
	NotificationStatusClosed NotificationStatus = "CLOSED"
)

func NewNotificationStatusFromString(s string) (NotificationStatus, error) {
	switch s {
	case "OPEN":
		return NotificationStatusOpen, nil
	case "CLOSED":
		return NotificationStatusClosed, nil
	}
	var t NotificationStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (n NotificationStatus) Ptr() *NotificationStatus {
	return &n
}

// Status object
type Status struct {
	// Human-readable name for this resource
	Name string `json:"name"`
	// Time object was originally created
	CreatedAt time.Time `json:"created_at"`
	// Last time object was updated
	UpdatedAt time.Time `json:"updated_at"`
	// Account owner
	AccountId Id `json:"account_id"`
	// Integration object
	IntegrationId Id `json:"integration_id"`
	// The current status of the notification.
	Status string `json:"status"`
	// Request count
	Requests int64 `json:"requests"`
	// Failed count
	Failed int64 `json:"failed"`
	// Cpu time in milliseconds
	CpuTime int64 `json:"cpu_time"`
	// Database operations count
	DbOps int64 `json:"db_ops"`
	// API operations count
	ApiOps int64 `json:"api_ops"`
}

// Status event object
type StatusEvent struct {
	// Account owner
	AccountId Id `json:"account_id"`
	// Integration object
	IntegrationId Id `json:"integration_id"`
	// Time created
	CreatedAt time.Time `json:"created_at"`
	// Error message
	Error *string `json:"error,omitempty"`
	// Request number
	Request int64 `json:"request"`
}

type Priority string

const (
	PriorityUrgent Priority = "URGENT"
	PriorityHigh   Priority = "HIGH"
	PriorityMedium Priority = "MEDIUM"
	PriorityLow    Priority = "LOW"
)

func NewPriorityFromString(s string) (Priority, error) {
	switch s {
	case "URGENT":
		return PriorityUrgent, nil
	case "HIGH":
		return PriorityHigh, nil
	case "MEDIUM":
		return PriorityMedium, nil
	case "LOW":
		return PriorityLow, nil
	}
	var t Priority
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (p Priority) Ptr() *Priority {
	return &p
}

// Ticketing ticket
type Ticket struct {
	// Human-readable name for this resource
	Name string `json:"name"`
	// Time object was originally created
	CreatedAt time.Time `json:"created_at"`
	// Last time object was updated
	UpdatedAt time.Time `json:"updated_at"`
	Id        TicketId  `json:"id,omitempty"`
	// User who created this ticket.
	Creator string `json:"creator"`
	// Who ticket is assigned to.
	Assignee string `json:"assignee"`
	// Ticket contact information.
	Contact string `json:"contact"`
	// Ticket description.
	Description string `json:"description"`
	// Ticket summary.
	Summary string `json:"summary"`
	// The priority of the Ticket
	Priority Priority `json:"priority,omitempty"`
	// The ticket's due date.
	DueDate time.Time `json:"due_date"`
	// The ticket's complete date.
	CompletionDate time.Time `json:"completion_date"`
	// The current status of the ticket.
	Status string `json:"status"`
	// The ticket project.
	Project string `json:"project"`
	// The ticket's type.
	IssueType string `json:"issue_type"`
	// Associate attachment URLs with ticket
	Attachments []string `json:"attachments,omitempty"`
	// Associate tags with Ticket
	Tags []string `json:"tags,omitempty"`
}

// Result of a vulnerability scan. Represented by OCSF Security Finding class (class_uid 2001).
type SecurityFinding = *Event
