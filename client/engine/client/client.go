// This file was auto-generated by Fern from our API Definition.

package client

import (
	assets "github.com/synqly/go-sdk/client/engine/assets"
	core "github.com/synqly/go-sdk/client/engine/core"
	edr "github.com/synqly/go-sdk/client/engine/edr"
	hooks "github.com/synqly/go-sdk/client/engine/hooks"
	identity "github.com/synqly/go-sdk/client/engine/identity"
	notifications "github.com/synqly/go-sdk/client/engine/notifications"
	operations "github.com/synqly/go-sdk/client/engine/operations"
	option "github.com/synqly/go-sdk/client/engine/option"
	siem "github.com/synqly/go-sdk/client/engine/siem"
	sink "github.com/synqly/go-sdk/client/engine/sink"
	storage "github.com/synqly/go-sdk/client/engine/storage"
	ticketing "github.com/synqly/go-sdk/client/engine/ticketing"
	vulnerabilities "github.com/synqly/go-sdk/client/engine/vulnerabilities"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header

	Assets          *assets.Client
	Edr             *edr.Client
	Hooks           *hooks.Client
	Identity        *identity.Client
	Notifications   *notifications.Client
	Operations      *operations.Client
	Siem            *siem.Client
	Sink            *sink.Client
	Storage         *storage.Client
	Ticketing       *ticketing.Client
	Vulnerabilities *vulnerabilities.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:          options.ToHeader(),
		Assets:          assets.NewClient(opts...),
		Edr:             edr.NewClient(opts...),
		Hooks:           hooks.NewClient(opts...),
		Identity:        identity.NewClient(opts...),
		Notifications:   notifications.NewClient(opts...),
		Operations:      operations.NewClient(opts...),
		Siem:            siem.NewClient(opts...),
		Sink:            sink.NewClient(opts...),
		Storage:         storage.NewClient(opts...),
		Ticketing:       ticketing.NewClient(opts...),
		Vulnerabilities: vulnerabilities.NewClient(opts...),
	}
}
