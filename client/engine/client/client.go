// This file was auto-generated by Fern from our API Definition.

package client

import (
	assets "github.com/synqly/go-sdk/client/engine/assets"
	core "github.com/synqly/go-sdk/client/engine/core"
	hooks "github.com/synqly/go-sdk/client/engine/hooks"
	identity "github.com/synqly/go-sdk/client/engine/identity"
	notifications "github.com/synqly/go-sdk/client/engine/notifications"
	siem "github.com/synqly/go-sdk/client/engine/siem"
	sink "github.com/synqly/go-sdk/client/engine/sink"
	storage "github.com/synqly/go-sdk/client/engine/storage"
	ticketing "github.com/synqly/go-sdk/client/engine/ticketing"
	vulnerabilities "github.com/synqly/go-sdk/client/engine/vulnerabilities"
	http "net/http"
)

type Client struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header

	Assets          *assets.Client
	Hooks           *hooks.Client
	Identity        *identity.Client
	Notifications   *notifications.Client
	Siem            *siem.Client
	Sink            *sink.Client
	Storage         *storage.Client
	Ticketing       *ticketing.Client
	Vulnerabilities *vulnerabilities.Client
}

func NewClient(opts ...core.ClientOption) *Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &Client{
		baseURL:         options.BaseURL,
		httpClient:      options.HTTPClient,
		header:          options.ToHeader(),
		Assets:          assets.NewClient(opts...),
		Hooks:           hooks.NewClient(opts...),
		Identity:        identity.NewClient(opts...),
		Notifications:   notifications.NewClient(opts...),
		Siem:            siem.NewClient(opts...),
		Sink:            sink.NewClient(opts...),
		Storage:         storage.NewClient(opts...),
		Ticketing:       ticketing.NewClient(opts...),
		Vulnerabilities: vulnerabilities.NewClient(opts...),
	}
}
