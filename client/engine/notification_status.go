// This file was auto-generated by Fern from our API Definition.

package engine

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type NotificationStatus uint8

const (
	NotificationStatusOpen NotificationStatus = iota + 1
	NotificationStatusClosed
)

func (n NotificationStatus) String() string {
	switch n {
	default:
		return strconv.Itoa(int(n))
	case NotificationStatusOpen:
		return "OPEN"
	case NotificationStatusClosed:
		return "CLOSED"
	}
}

func (n NotificationStatus) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", n.String())), nil
}

func (n *NotificationStatus) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "OPEN":
		value := NotificationStatusOpen
		*n = value
	case "CLOSED":
		value := NotificationStatusClosed
		*n = value
	}
	return nil
}
