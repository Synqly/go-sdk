// This file was auto-generated by Fern from our API Definition.

package engine

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/synqly/go-sdk/client/engine/core"
	latest "github.com/synqly/go-sdk/client/engine/ocsf/latest"
)

type QueryCloudResourceInventory struct {
	// Add metadata to the response by invoking meta functions. Documentation for meta functions is available at https://docs.synqly.com/api-reference/meta-functions. Not all meta function are available at every endpoint.
	Meta []*string `json:"-" url:"meta,omitempty"`
	// Number of cloud resources to return. Defaults to 500.
	Limit *int `json:"-" url:"limit,omitempty"`
	// Select a field to order the results by. Defaults to `name`. To control the direction of the sorting, append
	// `[asc]` or `[desc]` to the field name. For example, `name[asc]` will sort the results by `name` in ascending order.
	// The ordering defaults to `asc` if not specified.
	Order []*string `json:"-" url:"order,omitempty"`
	// Filter results by this query. For more information on filtering, refer to our Filtering Guide. Defaults to no filter.
	// If used more than once, the queries are ANDed together.
	Filter []*string `json:"-" url:"filter,omitempty"`
	// Start search from cursor position.
	Cursor *string `json:"-" url:"cursor,omitempty"`
}

type QueryComplianceFindings struct {
	// Add metadata to the response by invoking meta functions. Documentation for meta functions is available at https://docs.synqly.com/api-reference/meta-functions. Not all meta function are available at every endpoint.
	Meta []*string `json:"-" url:"meta,omitempty"`
	// Number of compliance findings to return. Defaults to 50.
	Limit *int `json:"-" url:"limit,omitempty"`
	// Start search from cursor position.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Select a field to order the results by. Defaults to `name`. To control the direction of the sorting, append
	// `[asc]` or `[desc]` to the field name. For example, `name[asc]` will sort the results by `name` in ascending order.
	// The ordering defaults to `asc` if not specified.
	Order []*string `json:"-" url:"order,omitempty"`
	// Filter results by this query. For more information on filtering, refer to our Filtering Guide. Defaults to no filter.
	// If used more than once, the queries are ANDed together.
	Filter []*string `json:"-" url:"filter,omitempty"`
}

type QueryCloudResourceInventoryResponse struct {
	// Various metadata about the results organized by group, then type, then field.
	Meta *MetaResponse `json:"meta,omitempty" url:"meta,omitempty"`
	// Cursor to use to retrieve the next page of results
	Cursor string `json:"cursor" url:"cursor"`
	// List of cloud resources that match the query.
	Result []latest.CloudResourcesInventoryInfo `json:"result" url:"result"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (q *QueryCloudResourceInventoryResponse) GetExtraProperties() map[string]interface{} {
	return q.extraProperties
}

func (q *QueryCloudResourceInventoryResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler QueryCloudResourceInventoryResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*q = QueryCloudResourceInventoryResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *q)
	if err != nil {
		return err
	}
	q.extraProperties = extraProperties

	q._rawJSON = nil
	return nil
}

func (q *QueryCloudResourceInventoryResponse) String() string {
	if len(q._rawJSON) > 0 {
		if value, err := core.StringifyJSON(q._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(q); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", q)
}

type QueryComplianceFindingsResponse struct {
	// Various metadata about the results organized by group, then type, then field.
	Meta *MetaResponse `json:"meta,omitempty" url:"meta,omitempty"`
	// Cursor to use to retrieve the next page of results
	Cursor string `json:"cursor" url:"cursor"`
	// List of compliance findings that match the query.
	Result []latest.ComplianceFinding `json:"result" url:"result"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (q *QueryComplianceFindingsResponse) GetExtraProperties() map[string]interface{} {
	return q.extraProperties
}

func (q *QueryComplianceFindingsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler QueryComplianceFindingsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*q = QueryComplianceFindingsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *q)
	if err != nil {
		return err
	}
	q.extraProperties = extraProperties

	q._rawJSON = nil
	return nil
}

func (q *QueryComplianceFindingsResponse) String() string {
	if len(q._rawJSON) > 0 {
		if value, err := core.StringifyJSON(q._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(q); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", q)
}
