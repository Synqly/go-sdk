// This file was auto-generated by Fern from our API Definition.

package core

import (
	fmt "fmt"
	http "net/http"
)

// ClientOption adapts the behavior of the generated client.
type ClientOption func(*ClientOptions)

// ClientOptions defines all of the possible client options.
// This type is primarily used by the generated code and is
// not meant to be used directly; use ClientOption instead.
type ClientOptions struct {
	BaseURL       string
	HTTPClient    HTTPClient
	HTTPHeader    http.Header
	Bearer        string
	SynqlyAccount string
}

// NewClientOptions returns a new *ClientOptions value.
// This function is primarily used by the generated code and is
// not meant to be used directly; use ClientOption instead.
func NewClientOptions() *ClientOptions {
	return &ClientOptions{
		HTTPClient: http.DefaultClient,
		HTTPHeader: make(http.Header),
	}
}

// ToHeader maps the configured client options into a http.Header issued
// on every request.
func (c *ClientOptions) ToHeader() http.Header {
	header := c.HTTPHeader.Clone()
	if c.Bearer != "" {
		header.Set("Authorization", "Bearer "+c.Bearer)
	}
	var headerSynqlyAccountValue string
	if c.SynqlyAccount != headerSynqlyAccountValue {
		header.Set("Synqly-Account", fmt.Sprintf("%v", c.SynqlyAccount))
	}
	return header
}
