// This file was auto-generated by Fern from our API Definition.

package client

import (
	accounts "github.com/synqly/go-sdk/client/management/accounts"
	audit "github.com/synqly/go-sdk/client/management/audit"
	capabilities "github.com/synqly/go-sdk/client/management/capabilities"
	core "github.com/synqly/go-sdk/client/management/core"
	credentials "github.com/synqly/go-sdk/client/management/credentials"
	integrations "github.com/synqly/go-sdk/client/management/integrations"
	logon "github.com/synqly/go-sdk/client/management/logon"
	tokens "github.com/synqly/go-sdk/client/management/tokens"
	transforms "github.com/synqly/go-sdk/client/management/transforms"
	users "github.com/synqly/go-sdk/client/management/users"
	http "net/http"
)

type Client struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header

	Accounts     *accounts.Client
	Audit        *audit.Client
	Capabilities *capabilities.Client
	Credentials  *credentials.Client
	Integrations *integrations.Client
	Logon        *logon.Client
	Tokens       *tokens.Client
	Transforms   *transforms.Client
	Users        *users.Client
}

func NewClient(opts ...core.ClientOption) *Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &Client{
		baseURL:      options.BaseURL,
		httpClient:   options.HTTPClient,
		header:       options.ToHeader(),
		Accounts:     accounts.NewClient(opts...),
		Audit:        audit.NewClient(opts...),
		Capabilities: capabilities.NewClient(opts...),
		Credentials:  credentials.NewClient(opts...),
		Integrations: integrations.NewClient(opts...),
		Logon:        logon.NewClient(opts...),
		Tokens:       tokens.NewClient(opts...),
		Transforms:   transforms.NewClient(opts...),
		Users:        users.NewClient(opts...),
	}
}
