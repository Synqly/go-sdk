// This file was auto-generated by Fern from our API Definition.

package management

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type CredentialType uint8

const (
	CredentialTypeAws CredentialType = iota + 1
	CredentialTypeToken
	CredentialTypeBasic
)

func (c CredentialType) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CredentialTypeAws:
		return "aws"
	case CredentialTypeToken:
		return "token"
	case CredentialTypeBasic:
		return "basic"
	}
}

func (c CredentialType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CredentialType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "aws":
		value := CredentialTypeAws
		*c = value
	case "token":
		value := CredentialTypeToken
		*c = value
	case "basic":
		value := CredentialTypeBasic
		*c = value
	}
	return nil
}
