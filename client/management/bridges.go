// This file was auto-generated by Fern from our API Definition.

package management

type ListBridgesRequest struct {
	// Number of `Bridge` objects to return in this page. Defaults to 100.
	Limit *int `json:"-"`
	// Return `Bridge` objects starting after this `name`.
	StartAfter *string `json:"-"`
	// Select a field to order the results by. Defaults to `name`. To control the direction of the sorting, append
	// `[asc]` or `[desc]` to the field name. For example, `name[desc]` will sort the results by `name` in descending order.
	// The ordering defaults to `asc` if not specified. May be used multiple times to order by multiple fields, and the
	// ordering is applied in the order the fields are specified.
	Order []*string `json:"-"`
	// Filter results by this query. For more information on filtering, refer to our Filtering Guide. Defaults to no filter.
	// If used more than once, the queries are ANDed together.
	Filter []*string `json:"-"`
}

// Unique identifier for this Bridge Group.
type BridgeGroupId = Id

type CreateBridgeRequest struct {
	// Unique short name for this Bridge (lowercase [a-z0-9_-], can be used in URLs). Also used for case insensitive duplicate name detection and default sort order. Defaults to BridgeGroupId if both name and fullname are not specified.
	Name *string `json:"name,omitempty"`
	// Human friendly display name for this Bridge, will auto-generate 'name' field (if 'name' is not specified). Defaults to the same value as the 'name' field if not specified.
	Fullname *string `json:"fullname,omitempty"`
	// Description of the resources included in the bridge and permissions granted on those resources. Includes details of when to use this bridge along with the intended personas.
	Description *string `json:"description,omitempty"`
	// Bridge selection labels
	Labels []string `json:"labels,omitempty"`
}

type CreateBridgeResponse struct {
	Result *CreateBridgeResponseResult `json:"result,omitempty"`
}

type GetBridgeResponse struct {
	Result *BridgeGroup `json:"result,omitempty"`
}

type ListBridgesResponse struct {
	Result []*BridgeGroup `json:"result,omitempty"`
}

type PatchBridgeResponse struct {
	Result *BridgeGroup `json:"result,omitempty"`
}

type UpdateBridgeRequest = *BridgeGroup

type UpdateBridgeResponse struct {
	Result *BridgeGroup `json:"result,omitempty"`
}
