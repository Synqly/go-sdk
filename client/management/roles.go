// This file was auto-generated by Fern from our API Definition.

package management

type ListRolesRequest struct {
	// Number of `Role` objects to return in this page. Defaults to 100.
	Limit *int `json:"-"`
	// Return `Role` objects starting after this `name`.
	StartAfter *string `json:"-"`
	// Return `Role` objects ending before this `name`.
	EndBefore *string `json:"-"`
	// Select a field to order the results by. Defaults to `name`. To control the direction of the sorting, append
	// `[asc]` or `[desc]` to the field name. For example, `name[desc]` will sort the results by `name` in descending order.
	// The ordering defaults to `asc` if not specified. May be used multiple times to order by multiple fields, and the
	// ordering is applied in the order the fields are specified.
	Order []*string `json:"-"`
	// Filter results by this query. For more information on filtering, refer to our Filtering Guide. Defaults to no filter.
	// If used more than once, the queries are ANDed together.
	Filter []*string `json:"-"`
}

// Unique identifier for this Role
type RoleId = Id

type CreateRoleRequest struct {
	// Unique short name for this Role (lowercase [a-z0-9_-], can be used in URLs). Also used for case insensitive duplicate name detection and default sort order. Defaults to RoleId if both name and fullname are not specified.
	Name *string `json:"name,omitempty"`
	// Human friendly display name for this Role, will auto-generate 'name' field (if 'name' is not specified)
	Fullname *string `json:"fullname,omitempty"`
	// Description of the resources included in the role and permissions granted on those resources. Includes details of when to use this role along with the intended personas.
	Description *string `json:"description,omitempty"`
	// Selects the resources the permission set applies to.
	Resources *Resources `json:"resources,omitempty"`
	// Permission set for this role.
	PermissionSet Permissions `json:"permission_set,omitempty"`
}

type CreateRoleResponse struct {
	Result *RoleDefinition `json:"result,omitempty"`
}

type GetRoleResponse struct {
	Result *RoleDefinition `json:"result,omitempty"`
}

type ListRolesResponse struct {
	Result []*RoleDefinition `json:"result,omitempty"`
}

type PatchRoleResponse struct {
	Result *RoleDefinition `json:"result,omitempty"`
}

type UpdateRoleRequest = *RoleDefinition

type UpdateRoleResponse struct {
	Result *RoleDefinition `json:"result,omitempty"`
}
