// This file was auto-generated by Fern from our API Definition.

package management

import (
	json "encoding/json"
	core "github.com/synqly/go-sdk/client/management/core"
)

type BadRequestError struct {
	*core.APIError
	Body *ErrorBody
}

func (b *BadRequestError) UnmarshalJSON(data []byte) error {
	var body *ErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	b.StatusCode = 400
	b.Body = body
	return nil
}

func (b *BadRequestError) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.Body)
}

func (b *BadRequestError) Unwrap() error {
	return b.APIError
}

type ConflictError struct {
	*core.APIError
	Body *ErrorBody
}

func (c *ConflictError) UnmarshalJSON(data []byte) error {
	var body *ErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	c.StatusCode = 409
	c.Body = body
	return nil
}

func (c *ConflictError) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.Body)
}

func (c *ConflictError) Unwrap() error {
	return c.APIError
}

type ForbiddenError struct {
	*core.APIError
	Body *ErrorBody
}

func (f *ForbiddenError) UnmarshalJSON(data []byte) error {
	var body *ErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	f.StatusCode = 403
	f.Body = body
	return nil
}

func (f *ForbiddenError) MarshalJSON() ([]byte, error) {
	return json.Marshal(f.Body)
}

func (f *ForbiddenError) Unwrap() error {
	return f.APIError
}

type NotFoundError struct {
	*core.APIError
	Body *ErrorBody
}

func (n *NotFoundError) UnmarshalJSON(data []byte) error {
	var body *ErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 404
	n.Body = body
	return nil
}

func (n *NotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NotFoundError) Unwrap() error {
	return n.APIError
}

type UnauthorizedError struct {
	*core.APIError
	Body *ErrorBody
}

func (u *UnauthorizedError) UnmarshalJSON(data []byte) error {
	var body *ErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	u.StatusCode = 401
	u.Body = body
	return nil
}

func (u *UnauthorizedError) MarshalJSON() ([]byte, error) {
	return json.Marshal(u.Body)
}

func (u *UnauthorizedError) Unwrap() error {
	return u.APIError
}
