// This file was auto-generated by Fern from our API Definition.

package management

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/synqly/go-sdk/client/management/core"
)

type ProviderCapabilitiesRequest struct {
	// Expand the capabilities result fields that are otherwise
	// omitted or returned as references to OpenAPI spec components.
	// NOTE: This can yield very big response objects.
	Expand []*GetProviderCapabilitiesExpandOptions `json:"-" url:"expand,omitempty"`
}

type ListConnectorsCapabilitiesRequest struct {
	// Expand the capabilities result fields that are otherwise
	// omitted or returned as references to OpenAPI spec components.
	// NOTE: This can yield very big response objects.
	Expand []*ListConnectorCapabilitiesExpandOptions `json:"-" url:"expand,omitempty"`
}

type ListProvidersCapabilitiesRequest struct {
	// Expand the capabilities result fields that are otherwise
	// omitted or returned as references to OpenAPI spec components.
	// NOTE: This can yield very big response objects.
	Expand []*ListProviderCapabilitiesExpandOptions `json:"-" url:"expand,omitempty"`
}

type GetProviderCapabilitiesExpandOptions string

const (
	GetProviderCapabilitiesExpandOptionsConnector      GetProviderCapabilitiesExpandOptions = "connector"
	GetProviderCapabilitiesExpandOptionsOperations     GetProviderCapabilitiesExpandOptions = "operations"
	GetProviderCapabilitiesExpandOptionsRequestBody    GetProviderCapabilitiesExpandOptions = "request_body"
	GetProviderCapabilitiesExpandOptionsProviderConfig GetProviderCapabilitiesExpandOptions = "provider_config"
)

func NewGetProviderCapabilitiesExpandOptionsFromString(s string) (GetProviderCapabilitiesExpandOptions, error) {
	switch s {
	case "connector":
		return GetProviderCapabilitiesExpandOptionsConnector, nil
	case "operations":
		return GetProviderCapabilitiesExpandOptionsOperations, nil
	case "request_body":
		return GetProviderCapabilitiesExpandOptionsRequestBody, nil
	case "provider_config":
		return GetProviderCapabilitiesExpandOptionsProviderConfig, nil
	}
	var t GetProviderCapabilitiesExpandOptions
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (g GetProviderCapabilitiesExpandOptions) Ptr() *GetProviderCapabilitiesExpandOptions {
	return &g
}

type ListConnectorCapabilitiesExpandOptions string

const (
	ListConnectorCapabilitiesExpandOptionsProviders ListConnectorCapabilitiesExpandOptions = "providers"
)

func NewListConnectorCapabilitiesExpandOptionsFromString(s string) (ListConnectorCapabilitiesExpandOptions, error) {
	switch s {
	case "providers":
		return ListConnectorCapabilitiesExpandOptionsProviders, nil
	}
	var t ListConnectorCapabilitiesExpandOptions
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (l ListConnectorCapabilitiesExpandOptions) Ptr() *ListConnectorCapabilitiesExpandOptions {
	return &l
}

type ListConnectorsCapabilitiesResponse struct {
	Result []*Connector `json:"result" url:"result"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListConnectorsCapabilitiesResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListConnectorsCapabilitiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListConnectorsCapabilitiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListConnectorsCapabilitiesResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = nil
	return nil
}

func (l *ListConnectorsCapabilitiesResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListProviderCapabilitiesExpandOptions string

const (
	ListProviderCapabilitiesExpandOptionsConnector      ListProviderCapabilitiesExpandOptions = "connector"
	ListProviderCapabilitiesExpandOptionsOperations     ListProviderCapabilitiesExpandOptions = "operations"
	ListProviderCapabilitiesExpandOptionsProviderConfig ListProviderCapabilitiesExpandOptions = "provider_config"
)

func NewListProviderCapabilitiesExpandOptionsFromString(s string) (ListProviderCapabilitiesExpandOptions, error) {
	switch s {
	case "connector":
		return ListProviderCapabilitiesExpandOptionsConnector, nil
	case "operations":
		return ListProviderCapabilitiesExpandOptionsOperations, nil
	case "provider_config":
		return ListProviderCapabilitiesExpandOptionsProviderConfig, nil
	}
	var t ListProviderCapabilitiesExpandOptions
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (l ListProviderCapabilitiesExpandOptions) Ptr() *ListProviderCapabilitiesExpandOptions {
	return &l
}

type ListProvidersCapabilitiesResponse struct {
	Result []*ProviderCapabilities `json:"result" url:"result"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListProvidersCapabilitiesResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListProvidersCapabilitiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListProvidersCapabilitiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListProvidersCapabilitiesResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = nil
	return nil
}

func (l *ListProvidersCapabilitiesResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ProviderCapabilitiesResponse struct {
	Result *ProviderCapabilities `json:"result" url:"result"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *ProviderCapabilitiesResponse) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *ProviderCapabilitiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ProviderCapabilitiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = ProviderCapabilitiesResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = nil
	return nil
}

func (p *ProviderCapabilitiesResponse) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
