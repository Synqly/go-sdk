// This file was auto-generated by Fern from our API Definition.

package management

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type HttpMethod uint8

const (
	HttpMethodGet HttpMethod = iota + 1
	HttpMethodPatch
	HttpMethodPost
	HttpMethodPut
	HttpMethodDelete
)

func (h HttpMethod) String() string {
	switch h {
	default:
		return strconv.Itoa(int(h))
	case HttpMethodGet:
		return "GET"
	case HttpMethodPatch:
		return "PATCH"
	case HttpMethodPost:
		return "POST"
	case HttpMethodPut:
		return "PUT"
	case HttpMethodDelete:
		return "DELETE"
	}
}

func (h HttpMethod) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", h.String())), nil
}

func (h *HttpMethod) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "GET":
		value := HttpMethodGet
		*h = value
	case "PATCH":
		value := HttpMethodPatch
		*h = value
	case "POST":
		value := HttpMethodPost
		*h = value
	case "PUT":
		value := HttpMethodPut
		*h = value
	case "DELETE":
		value := HttpMethodDelete
		*h = value
	}
	return nil
}
