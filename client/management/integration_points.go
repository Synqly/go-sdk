// This file was auto-generated by Fern from our API Definition.

package management

type ListIntegrationPointsRequest struct {
	// Number of `IntegrationPoint` objects to return in this page. Defaults to 100.
	Limit *int `json:"-"`
	// Return `IntegrationPoint` objects starting after this `name`.
	StartAfter *string `json:"-"`
	// Return `IntegrationPoint` objects ending before this `name`.
	EndBefore *string `json:"-"`
	// Select a field to order the results by. Defaults to `name`. To control the direction of the sorting, append
	// `[asc]` or `[desc]` to the field name. For example, `name[desc]` will sort the results by `name` in descending order.
	// The ordering defaults to `asc` if not specified. May be used multiple times to order by multiple fields, and the
	// ordering is applied in the order the fields are specified.
	Order []*string `json:"-"`
	// Filter results by this query. For more information on filtering, refer to our Filtering Guide. Defaults to no filter.
	// If used more than once, the queries are ANDed together.
	Filter []*string `json:"-"`
}

type CreateIntegrationPointRequest struct {
	// Unique short name for this Integration Point (lowercase [a-z0-9_-], can be used in URLs). Also used for case insensitive duplicate name detection and default sort order. Defaults to IntegrationPointId if both name and fullname are not specified.
	Name *string `json:"name,omitempty"`
	// Name of integration point, will be shown to end-users in the Connect UI. Defaults to the same value as the 'name' field if not specified.
	Fullname *string `json:"fullname,omitempty"`
	// Optional description of the Integration Point. Will not be displayed to end-users of Connect UI.
	Description *string `json:"description,omitempty"`
	// Connector to use for the Integration Point.
	Connector CategoryId `json:"connector,omitempty"`
	// Selects providers to use for account environments.
	Environments *IntegrationEnvironments `json:"environments,omitempty"`
}

type CreateIntegrationPointResponse struct {
	Result *IntegrationPoint `json:"result,omitempty"`
}

type GetIntegrationPointResponse struct {
	Result *IntegrationPoint `json:"result,omitempty"`
}

// Unique identifier for this IntegrationPoint
type IntegrationPointId = Id

type ListIntegrationPointsResponse struct {
	Result []*IntegrationPoint `json:"result,omitempty"`
}

type PatchIntegrationPointResponse struct {
	Result *IntegrationPoint `json:"result,omitempty"`
}

type UpdateIntegrationPointRequest = *IntegrationPoint

type UpdateIntegrationPointResponse struct {
	Result *IntegrationPoint `json:"result,omitempty"`
}
